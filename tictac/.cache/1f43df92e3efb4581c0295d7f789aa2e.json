{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/@protobufjs/float/package.json","includedInParent":true,"mtime":1491129909000}],"generated":{"js":"\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","map":{"mappings":[{"source":"node_modules/@protobufjs/float/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/@protobufjs/float/index.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}}],"sources":{"node_modules/@protobufjs/float/index.js":"\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n"},"lineCount":336}},"hash":"fed9ae8844a934b6338bb5b4469e3be9","cacheData":{"env":{}}}