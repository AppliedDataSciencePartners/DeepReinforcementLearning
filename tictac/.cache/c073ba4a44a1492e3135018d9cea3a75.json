{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/browserify-cipher/package.json","includedInParent":true,"mtime":499162500000},{"name":"browserify-des","loc":{"line":1,"column":18}},{"name":"browserify-aes/browser","loc":{"line":2,"column":18}},{"name":"browserify-aes/modes","loc":{"line":3,"column":23}},{"name":"browserify-des/modes","loc":{"line":4,"column":23}},{"name":"evp_bytestokey","loc":{"line":5,"column":19}}],"generated":{"js":"var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n","map":{"mappings":[{"source":"node_modules/browserify-cipher/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/browserify-cipher/browser.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}}],"sources":{"node_modules/browserify-cipher/browser.js":"var DES = require('browserify-des')\nvar aes = require('browserify-aes/browser')\nvar aesModes = require('browserify-aes/modes')\nvar desModes = require('browserify-des/modes')\nvar ebtk = require('evp_bytestokey')\n\nfunction createCipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createCipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createDecipher (suite, password) {\n  suite = suite.toLowerCase()\n\n  var keyLen, ivLen\n  if (aesModes[suite]) {\n    keyLen = aesModes[suite].key\n    ivLen = aesModes[suite].iv\n  } else if (desModes[suite]) {\n    keyLen = desModes[suite].key * 8\n    ivLen = desModes[suite].iv\n  } else {\n    throw new TypeError('invalid suite type')\n  }\n\n  var keys = ebtk(password, false, keyLen, ivLen)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nfunction createCipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createCipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction createDecipheriv (suite, key, iv) {\n  suite = suite.toLowerCase()\n  if (aesModes[suite]) return aes.createDecipheriv(suite, key, iv)\n  if (desModes[suite]) return new DES({ key: key, iv: iv, mode: suite, decrypt: true })\n\n  throw new TypeError('invalid suite type')\n}\n\nfunction getCiphers () {\n  return Object.keys(desModes).concat(aes.getCiphers())\n}\n\nexports.createCipher = exports.Cipher = createCipher\nexports.createCipheriv = exports.Cipheriv = createCipheriv\nexports.createDecipher = exports.Decipher = createDecipher\nexports.createDecipheriv = exports.Decipheriv = createDecipheriv\nexports.listCiphers = exports.getCiphers = getCiphers\n"},"lineCount":68}},"hash":"68e02b53fb88a9b0751be88f8d4c1273","cacheData":{"env":{}}}