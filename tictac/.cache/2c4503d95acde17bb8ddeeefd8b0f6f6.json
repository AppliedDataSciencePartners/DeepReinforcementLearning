{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/asn1.js/package.json","includedInParent":true,"mtime":1518564474000},{"name":"inherits","loc":{"line":1,"column":23}},{"name":"buffer","loc":{"line":2,"column":21}},{"name":"./der","loc":{"line":4,"column":25}}],"generated":{"js":"\nvar inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n","map":{"mappings":[{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/asn1.js/lib/asn1/decoders/pem.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}}],"sources":{"node_modules/asn1.js/lib/asn1/decoders/pem.js":"var inherits = require('inherits');\nvar Buffer = require('buffer').Buffer;\n\nvar DERDecoder = require('./der');\n\nfunction PEMDecoder(entity) {\n  DERDecoder.call(this, entity);\n  this.enc = 'pem';\n};\ninherits(PEMDecoder, DERDecoder);\nmodule.exports = PEMDecoder;\n\nPEMDecoder.prototype.decode = function decode(data, options) {\n  var lines = data.toString().split(/[\\r\\n]+/g);\n\n  var label = options.label.toUpperCase();\n\n  var re = /^-----(BEGIN|END) ([^-]+)-----$/;\n  var start = -1;\n  var end = -1;\n  for (var i = 0; i < lines.length; i++) {\n    var match = lines[i].match(re);\n    if (match === null)\n      continue;\n\n    if (match[2] !== label)\n      continue;\n\n    if (start === -1) {\n      if (match[1] !== 'BEGIN')\n        break;\n      start = i;\n    } else {\n      if (match[1] !== 'END')\n        break;\n      end = i;\n      break;\n    }\n  }\n  if (start === -1 || end === -1)\n    throw new Error('PEM section not found for: ' + label);\n\n  var base64 = lines.slice(start + 1, end).join('');\n  // Remove excessive symbols\n  base64.replace(/[^a-z0-9\\+\\/=]+/gi, '');\n\n  var input = new Buffer(base64, 'base64');\n  return DERDecoder.prototype.decode.call(this, input, options);\n};\n"},"lineCount":51}},"hash":"28b36c58fffb5b542e914b7f5212fa0b","cacheData":{"env":{}}}