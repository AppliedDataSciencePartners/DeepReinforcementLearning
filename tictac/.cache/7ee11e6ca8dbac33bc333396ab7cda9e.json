{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/browserify-aes/package.json","includedInParent":true,"mtime":499162500000},{"name":"./authCipher","loc":{"line":1,"column":25}},{"name":"safe-buffer","loc":{"line":2,"column":21}},{"name":"./modes","loc":{"line":3,"column":20}},{"name":"./streamCipher","loc":{"line":4,"column":27}},{"name":"cipher-base","loc":{"line":5,"column":24}},{"name":"./aes","loc":{"line":6,"column":18}},{"name":"evp_bytestokey","loc":{"line":7,"column":19}},{"name":"inherits","loc":{"line":8,"column":23}}],"generated":{"js":"\nvar AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n","map":{"mappings":[{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/browserify-aes/decrypter.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}}],"sources":{"node_modules/browserify-aes/decrypter.js":"var AuthCipher = require('./authCipher')\nvar Buffer = require('safe-buffer').Buffer\nvar MODES = require('./modes')\nvar StreamCipher = require('./streamCipher')\nvar Transform = require('cipher-base')\nvar aes = require('./aes')\nvar ebtk = require('evp_bytestokey')\nvar inherits = require('inherits')\n\nfunction Decipher (mode, key, iv) {\n  Transform.call(this)\n\n  this._cache = new Splitter()\n  this._last = void 0\n  this._cipher = new aes.AES(key)\n  this._prev = Buffer.from(iv)\n  this._mode = mode\n  this._autopadding = true\n}\n\ninherits(Decipher, Transform)\n\nDecipher.prototype._update = function (data) {\n  this._cache.add(data)\n  var chunk\n  var thing\n  var out = []\n  while ((chunk = this._cache.get(this._autopadding))) {\n    thing = this._mode.decrypt(this, chunk)\n    out.push(thing)\n  }\n  return Buffer.concat(out)\n}\n\nDecipher.prototype._final = function () {\n  var chunk = this._cache.flush()\n  if (this._autopadding) {\n    return unpad(this._mode.decrypt(this, chunk))\n  } else if (chunk) {\n    throw new Error('data not multiple of block length')\n  }\n}\n\nDecipher.prototype.setAutoPadding = function (setTo) {\n  this._autopadding = !!setTo\n  return this\n}\n\nfunction Splitter () {\n  this.cache = Buffer.allocUnsafe(0)\n}\n\nSplitter.prototype.add = function (data) {\n  this.cache = Buffer.concat([this.cache, data])\n}\n\nSplitter.prototype.get = function (autoPadding) {\n  var out\n  if (autoPadding) {\n    if (this.cache.length > 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  } else {\n    if (this.cache.length >= 16) {\n      out = this.cache.slice(0, 16)\n      this.cache = this.cache.slice(16)\n      return out\n    }\n  }\n\n  return null\n}\n\nSplitter.prototype.flush = function () {\n  if (this.cache.length) return this.cache\n}\n\nfunction unpad (last) {\n  var padded = last[15]\n  if (padded < 1 || padded > 16) {\n    throw new Error('unable to decrypt data')\n  }\n  var i = -1\n  while (++i < padded) {\n    if (last[(i + (16 - padded))] !== padded) {\n      throw new Error('unable to decrypt data')\n    }\n  }\n  if (padded === 16) return\n\n  return last.slice(0, 16 - padded)\n}\n\nfunction createDecipheriv (suite, password, iv) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  if (typeof iv === 'string') iv = Buffer.from(iv)\n  if (config.mode !== 'GCM' && iv.length !== config.iv) throw new TypeError('invalid iv length ' + iv.length)\n\n  if (typeof password === 'string') password = Buffer.from(password)\n  if (password.length !== config.key / 8) throw new TypeError('invalid key length ' + password.length)\n\n  if (config.type === 'stream') {\n    return new StreamCipher(config.module, password, iv, true)\n  } else if (config.type === 'auth') {\n    return new AuthCipher(config.module, password, iv, true)\n  }\n\n  return new Decipher(config.module, password, iv)\n}\n\nfunction createDecipher (suite, password) {\n  var config = MODES[suite.toLowerCase()]\n  if (!config) throw new TypeError('invalid suite type')\n\n  var keys = ebtk(password, false, config.key, config.iv)\n  return createDecipheriv(suite, keys.key, keys.iv)\n}\n\nexports.createDecipher = createDecipher\nexports.createDecipheriv = createDecipheriv\n"},"lineCount":126}},"hash":"1480996c902d5d5812defc71b0e3e3fc","cacheData":{"env":{}}}