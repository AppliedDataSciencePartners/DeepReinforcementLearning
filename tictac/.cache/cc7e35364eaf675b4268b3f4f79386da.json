{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/hash.js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../utils","loc":{"line":3,"column":20}},{"name":"./256","loc":{"line":4,"column":21}}],"generated":{"js":"'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n","map":{"mappings":[{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/224.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/hash.js/lib/hash/sha/224.js":"'use strict';\n\nvar utils = require('../utils');\nvar SHA256 = require('./256');\n\nfunction SHA224() {\n  if (!(this instanceof SHA224))\n    return new SHA224();\n\n  SHA256.call(this);\n  this.h = [\n    0xc1059ed8, 0x367cd507, 0x3070dd17, 0xf70e5939,\n    0xffc00b31, 0x68581511, 0x64f98fa7, 0xbefa4fa4 ];\n}\nutils.inherits(SHA224, SHA256);\nmodule.exports = SHA224;\n\nSHA224.blockSize = 512;\nSHA224.outSize = 224;\nSHA224.hmacStrength = 192;\nSHA224.padLength = 64;\n\nSHA224.prototype._digest = function digest(enc) {\n  // Just truncate output\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 7), 'big');\n  else\n    return utils.split32(this.h.slice(0, 7), 'big');\n};\n\n"},"lineCount":31}},"hash":"f7c7ec05bc35b268f92a73be0579a503","cacheData":{"env":{}}}