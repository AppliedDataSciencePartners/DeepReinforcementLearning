{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/crypto-browserify/package.json","includedInParent":true,"mtime":1509636078000},{"name":"randombytes","loc":{"line":3,"column":87}},{"name":"create-hash","loc":{"line":4,"column":44}},{"name":"create-hmac","loc":{"line":5,"column":44}},{"name":"browserify-sign/algos","loc":{"line":7,"column":20}},{"name":"pbkdf2","loc":{"line":14,"column":16}},{"name":"browserify-cipher","loc":{"line":18,"column":18}},{"name":"diffie-hellman","loc":{"line":31,"column":17}},{"name":"browserify-sign","loc":{"line":39,"column":19}},{"name":"create-ecdh","loc":{"line":46,"column":29}},{"name":"public-encrypt","loc":{"line":48,"column":28}},{"name":"randomfill","loc":{"line":68,"column":17}}],"generated":{"js":"'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n","map":{"mappings":[{"source":"node_modules/crypto-browserify/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/crypto-browserify/index.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}}],"sources":{"node_modules/crypto-browserify/index.js":"'use strict'\n\nexports.randomBytes = exports.rng = exports.pseudoRandomBytes = exports.prng = require('randombytes')\nexports.createHash = exports.Hash = require('create-hash')\nexports.createHmac = exports.Hmac = require('create-hmac')\n\nvar algos = require('browserify-sign/algos')\nvar algoKeys = Object.keys(algos)\nvar hashes = ['sha1', 'sha224', 'sha256', 'sha384', 'sha512', 'md5', 'rmd160'].concat(algoKeys)\nexports.getHashes = function () {\n  return hashes\n}\n\nvar p = require('pbkdf2')\nexports.pbkdf2 = p.pbkdf2\nexports.pbkdf2Sync = p.pbkdf2Sync\n\nvar aes = require('browserify-cipher')\n\nexports.Cipher = aes.Cipher\nexports.createCipher = aes.createCipher\nexports.Cipheriv = aes.Cipheriv\nexports.createCipheriv = aes.createCipheriv\nexports.Decipher = aes.Decipher\nexports.createDecipher = aes.createDecipher\nexports.Decipheriv = aes.Decipheriv\nexports.createDecipheriv = aes.createDecipheriv\nexports.getCiphers = aes.getCiphers\nexports.listCiphers = aes.listCiphers\n\nvar dh = require('diffie-hellman')\n\nexports.DiffieHellmanGroup = dh.DiffieHellmanGroup\nexports.createDiffieHellmanGroup = dh.createDiffieHellmanGroup\nexports.getDiffieHellman = dh.getDiffieHellman\nexports.createDiffieHellman = dh.createDiffieHellman\nexports.DiffieHellman = dh.DiffieHellman\n\nvar sign = require('browserify-sign')\n\nexports.createSign = sign.createSign\nexports.Sign = sign.Sign\nexports.createVerify = sign.createVerify\nexports.Verify = sign.Verify\n\nexports.createECDH = require('create-ecdh')\n\nvar publicEncrypt = require('public-encrypt')\n\nexports.publicEncrypt = publicEncrypt.publicEncrypt\nexports.privateEncrypt = publicEncrypt.privateEncrypt\nexports.publicDecrypt = publicEncrypt.publicDecrypt\nexports.privateDecrypt = publicEncrypt.privateDecrypt\n\n// the least I can do is make error messages for the rest of the node.js/crypto api.\n// ;[\n//   'createCredentials'\n// ].forEach(function (name) {\n//   exports[name] = function () {\n//     throw new Error([\n//       'sorry, ' + name + ' is not implemented yet',\n//       'we accept pull requests',\n//       'https://github.com/crypto-browserify/crypto-browserify'\n//     ].join('\\n'))\n//   }\n// })\n\nvar rf = require('randomfill')\n\nexports.randomFill = rf.randomFill\nexports.randomFillSync = rf.randomFillSync\n\nexports.createCredentials = function () {\n  throw new Error([\n    'sorry, createCredentials is not implemented yet',\n    'we accept pull requests',\n    'https://github.com/crypto-browserify/crypto-browserify'\n  ].join('\\n'))\n}\n\nexports.constants = {\n  'DH_CHECK_P_NOT_SAFE_PRIME': 2,\n  'DH_CHECK_P_NOT_PRIME': 1,\n  'DH_UNABLE_TO_CHECK_GENERATOR': 4,\n  'DH_NOT_SUITABLE_GENERATOR': 8,\n  'NPN_ENABLED': 1,\n  'ALPN_ENABLED': 1,\n  'RSA_PKCS1_PADDING': 1,\n  'RSA_SSLV23_PADDING': 2,\n  'RSA_NO_PADDING': 3,\n  'RSA_PKCS1_OAEP_PADDING': 4,\n  'RSA_X931_PADDING': 5,\n  'RSA_PKCS1_PSS_PADDING': 6,\n  'POINT_CONVERSION_COMPRESSED': 2,\n  'POINT_CONVERSION_UNCOMPRESSED': 4,\n  'POINT_CONVERSION_HYBRID': 6\n}\n"},"lineCount":98}},"hash":"8df601fbebaa9d4244c74cc929c073cc","cacheData":{"env":{}}}