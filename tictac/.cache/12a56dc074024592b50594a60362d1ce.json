{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/browserify-aes/package.json","includedInParent":true,"mtime":499162500000},{"name":"safe-buffer","loc":{"line":1,"column":21}},{"name":"buffer-xor","loc":{"line":2,"column":18}}],"generated":{"js":"\nvar Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n","map":{"mappings":[{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/browserify-aes/modes/cfb.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}}],"sources":{"node_modules/browserify-aes/modes/cfb.js":"var Buffer = require('safe-buffer').Buffer\nvar xor = require('buffer-xor')\n\nfunction encryptStart (self, data, decrypt) {\n  var len = data.length\n  var out = xor(data, self._cache)\n  self._cache = self._cache.slice(len)\n  self._prev = Buffer.concat([self._prev, decrypt ? data : out])\n  return out\n}\n\nexports.encrypt = function (self, data, decrypt) {\n  var out = Buffer.allocUnsafe(0)\n  var len\n\n  while (data.length) {\n    if (self._cache.length === 0) {\n      self._cache = self._cipher.encryptBlock(self._prev)\n      self._prev = Buffer.allocUnsafe(0)\n    }\n\n    if (self._cache.length <= data.length) {\n      len = self._cache.length\n      out = Buffer.concat([out, encryptStart(self, data.slice(0, len), decrypt)])\n      data = data.slice(len)\n    } else {\n      out = Buffer.concat([out, encryptStart(self, data, decrypt)])\n      break\n    }\n  }\n\n  return out\n}\n"},"lineCount":35}},"hash":"6f3fee8b4c575dfea3adeab53307350e","cacheData":{"env":{}}}