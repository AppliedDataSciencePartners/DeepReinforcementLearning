{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/hash.js/package.json","includedInParent":true,"mtime":499162500000},{"name":"../utils","loc":{"line":3,"column":20}},{"name":"./512","loc":{"line":5,"column":21}}],"generated":{"js":"'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n","map":{"mappings":[{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/hash.js/lib/hash/sha/384.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}}],"sources":{"node_modules/hash.js/lib/hash/sha/384.js":"'use strict';\n\nvar utils = require('../utils');\n\nvar SHA512 = require('./512');\n\nfunction SHA384() {\n  if (!(this instanceof SHA384))\n    return new SHA384();\n\n  SHA512.call(this);\n  this.h = [\n    0xcbbb9d5d, 0xc1059ed8,\n    0x629a292a, 0x367cd507,\n    0x9159015a, 0x3070dd17,\n    0x152fecd8, 0xf70e5939,\n    0x67332667, 0xffc00b31,\n    0x8eb44a87, 0x68581511,\n    0xdb0c2e0d, 0x64f98fa7,\n    0x47b5481d, 0xbefa4fa4 ];\n}\nutils.inherits(SHA384, SHA512);\nmodule.exports = SHA384;\n\nSHA384.blockSize = 1024;\nSHA384.outSize = 384;\nSHA384.hmacStrength = 192;\nSHA384.padLength = 128;\n\nSHA384.prototype._digest = function digest(enc) {\n  if (enc === 'hex')\n    return utils.toHex32(this.h.slice(0, 12), 'big');\n  else\n    return utils.split32(this.h.slice(0, 12), 'big');\n};\n"},"lineCount":36}},"hash":"4e60b94f286ba694b6811555629a356a","cacheData":{"env":{}}}