{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/des.js/package.json","includedInParent":true,"mtime":1441588036000},{"name":"minimalistic-assert","loc":{"line":3,"column":21}},{"name":"inherits","loc":{"line":4,"column":23}}],"generated":{"js":"'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n","map":{"mappings":[{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/des.js/lib/des/cbc.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}}],"sources":{"node_modules/des.js/lib/des/cbc.js":"'use strict';\n\nvar assert = require('minimalistic-assert');\nvar inherits = require('inherits');\n\nvar proto = {};\n\nfunction CBCState(iv) {\n  assert.equal(iv.length, 8, 'Invalid IV length');\n\n  this.iv = new Array(8);\n  for (var i = 0; i < this.iv.length; i++)\n    this.iv[i] = iv[i];\n}\n\nfunction instantiate(Base) {\n  function CBC(options) {\n    Base.call(this, options);\n    this._cbcInit();\n  }\n  inherits(CBC, Base);\n\n  var keys = Object.keys(proto);\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    CBC.prototype[key] = proto[key];\n  }\n\n  CBC.create = function create(options) {\n    return new CBC(options);\n  };\n\n  return CBC;\n}\n\nexports.instantiate = instantiate;\n\nproto._cbcInit = function _cbcInit() {\n  var state = new CBCState(this.options.iv);\n  this._cbcState = state;\n};\n\nproto._update = function _update(inp, inOff, out, outOff) {\n  var state = this._cbcState;\n  var superProto = this.constructor.super_.prototype;\n\n  var iv = state.iv;\n  if (this.type === 'encrypt') {\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] ^= inp[inOff + i];\n\n    superProto._update.call(this, iv, 0, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = out[outOff + i];\n  } else {\n    superProto._update.call(this, inp, inOff, out, outOff);\n\n    for (var i = 0; i < this.blockSize; i++)\n      out[outOff + i] ^= iv[i];\n\n    for (var i = 0; i < this.blockSize; i++)\n      iv[i] = inp[inOff + i];\n  }\n};\n"},"lineCount":66}},"hash":"e2704fb6ec74d7d91213ee447a32069c","cacheData":{"env":{}}}