{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/protobufjs/package.json","includedInParent":true,"mtime":1519644894000},{"name":"./util/minimal","loc":{"line":4,"column":24}}],"generated":{"js":"\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n","map":{"mappings":[{"source":"node_modules/protobufjs/src/writer.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/protobufjs/src/writer.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}}],"sources":{"node_modules/protobufjs/src/writer.js":"\"use strict\";\r\nmodule.exports = Writer;\r\n\r\nvar util      = require(\"./util/minimal\");\r\n\r\nvar BufferWriter; // cyclic\r\n\r\nvar LongBits  = util.LongBits,\r\n    base64    = util.base64,\r\n    utf8      = util.utf8;\r\n\r\n/**\r\n * Constructs a new writer operation instance.\r\n * @classdesc Scheduled writer operation.\r\n * @constructor\r\n * @param {function(*, Uint8Array, number)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {*} val Value to write\r\n * @ignore\r\n */\r\nfunction Op(fn, len, val) {\r\n\r\n    /**\r\n     * Function to call.\r\n     * @type {function(Uint8Array, number, *)}\r\n     */\r\n    this.fn = fn;\r\n\r\n    /**\r\n     * Value byte length.\r\n     * @type {number}\r\n     */\r\n    this.len = len;\r\n\r\n    /**\r\n     * Next operation.\r\n     * @type {Writer.Op|undefined}\r\n     */\r\n    this.next = undefined;\r\n\r\n    /**\r\n     * Value to write.\r\n     * @type {*}\r\n     */\r\n    this.val = val; // type varies\r\n}\r\n\r\n/* istanbul ignore next */\r\nfunction noop() {} // eslint-disable-line no-empty-function\r\n\r\n/**\r\n * Constructs a new writer state instance.\r\n * @classdesc Copied writer state.\r\n * @memberof Writer\r\n * @constructor\r\n * @param {Writer} writer Writer to copy state from\r\n * @ignore\r\n */\r\nfunction State(writer) {\r\n\r\n    /**\r\n     * Current head.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.head = writer.head;\r\n\r\n    /**\r\n     * Current tail.\r\n     * @type {Writer.Op}\r\n     */\r\n    this.tail = writer.tail;\r\n\r\n    /**\r\n     * Current buffer length.\r\n     * @type {number}\r\n     */\r\n    this.len = writer.len;\r\n\r\n    /**\r\n     * Next state.\r\n     * @type {State|null}\r\n     */\r\n    this.next = writer.states;\r\n}\r\n\r\n/**\r\n * Constructs a new writer instance.\r\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\r\n * @constructor\r\n */\r\nfunction Writer() {\r\n\r\n    /**\r\n     * Current length.\r\n     * @type {number}\r\n     */\r\n    this.len = 0;\r\n\r\n    /**\r\n     * Operations head.\r\n     * @type {Object}\r\n     */\r\n    this.head = new Op(noop, 0, 0);\r\n\r\n    /**\r\n     * Operations tail\r\n     * @type {Object}\r\n     */\r\n    this.tail = this.head;\r\n\r\n    /**\r\n     * Linked forked states.\r\n     * @type {Object|null}\r\n     */\r\n    this.states = null;\r\n\r\n    // When a value is written, the writer calculates its byte length and puts it into a linked\r\n    // list of operations to perform when finish() is called. This both allows us to allocate\r\n    // buffers of the exact required size and reduces the amount of work we have to do compared\r\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\r\n    // part is just a linked list walk calling operations with already prepared values.\r\n}\r\n\r\n/**\r\n * Creates a new writer.\r\n * @function\r\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\r\n */\r\nWriter.create = util.Buffer\r\n    ? function create_buffer_setup() {\r\n        return (Writer.create = function create_buffer() {\r\n            return new BufferWriter();\r\n        })();\r\n    }\r\n    /* istanbul ignore next */\r\n    : function create_array() {\r\n        return new Writer();\r\n    };\r\n\r\n/**\r\n * Allocates a buffer of the specified size.\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\nWriter.alloc = function alloc(size) {\r\n    return new util.Array(size);\r\n};\r\n\r\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\r\n/* istanbul ignore else */\r\nif (util.Array !== Array)\r\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\r\n\r\n/**\r\n * Pushes a new operation to the queue.\r\n * @param {function(Uint8Array, number, *)} fn Function to call\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @returns {Writer} `this`\r\n * @private\r\n */\r\nWriter.prototype._push = function push(fn, len, val) {\r\n    this.tail = this.tail.next = new Op(fn, len, val);\r\n    this.len += len;\r\n    return this;\r\n};\r\n\r\nfunction writeByte(val, buf, pos) {\r\n    buf[pos] = val & 255;\r\n}\r\n\r\nfunction writeVarint32(val, buf, pos) {\r\n    while (val > 127) {\r\n        buf[pos++] = val & 127 | 128;\r\n        val >>>= 7;\r\n    }\r\n    buf[pos] = val;\r\n}\r\n\r\n/**\r\n * Constructs a new varint writer operation instance.\r\n * @classdesc Scheduled varint writer operation.\r\n * @extends Op\r\n * @constructor\r\n * @param {number} len Value byte length\r\n * @param {number} val Value to write\r\n * @ignore\r\n */\r\nfunction VarintOp(len, val) {\r\n    this.len = len;\r\n    this.next = undefined;\r\n    this.val = val;\r\n}\r\n\r\nVarintOp.prototype = Object.create(Op.prototype);\r\nVarintOp.prototype.fn = writeVarint32;\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as a varint.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.uint32 = function write_uint32(value) {\r\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\r\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\r\n    this.len += (this.tail = this.tail.next = new VarintOp(\r\n        (value = value >>> 0)\r\n                < 128       ? 1\r\n        : value < 16384     ? 2\r\n        : value < 2097152   ? 3\r\n        : value < 268435456 ? 4\r\n        :                     5,\r\n    value)).len;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as a varint.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.int32 = function write_int32(value) {\r\n    return value < 0\r\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\r\n        : this.uint32(value);\r\n};\r\n\r\n/**\r\n * Writes a 32 bit value as a varint, zig-zag encoded.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sint32 = function write_sint32(value) {\r\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\r\n};\r\n\r\nfunction writeVarint64(val, buf, pos) {\r\n    while (val.hi) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\r\n        val.hi >>>= 7;\r\n    }\r\n    while (val.lo > 127) {\r\n        buf[pos++] = val.lo & 127 | 128;\r\n        val.lo = val.lo >>> 7;\r\n    }\r\n    buf[pos++] = val.lo;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as a varint.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.uint64 = function write_uint64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.int64 = Writer.prototype.uint64;\r\n\r\n/**\r\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sint64 = function write_sint64(value) {\r\n    var bits = LongBits.from(value).zzEncode();\r\n    return this._push(writeVarint64, bits.length(), bits);\r\n};\r\n\r\n/**\r\n * Writes a boolish value as a varint.\r\n * @param {boolean} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bool = function write_bool(value) {\r\n    return this._push(writeByte, 1, value ? 1 : 0);\r\n};\r\n\r\nfunction writeFixed32(val, buf, pos) {\r\n    buf[pos    ] =  val         & 255;\r\n    buf[pos + 1] =  val >>> 8   & 255;\r\n    buf[pos + 2] =  val >>> 16  & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\n/**\r\n * Writes an unsigned 32 bit value as fixed 32 bits.\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fixed32 = function write_fixed32(value) {\r\n    return this._push(writeFixed32, 4, value >>> 0);\r\n};\r\n\r\n/**\r\n * Writes a signed 32 bit value as fixed 32 bits.\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\r\n\r\n/**\r\n * Writes an unsigned 64 bit value as fixed 64 bits.\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.fixed64 = function write_fixed64(value) {\r\n    var bits = LongBits.from(value);\r\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\r\n};\r\n\r\n/**\r\n * Writes a signed 64 bit value as fixed 64 bits.\r\n * @function\r\n * @param {Long|number|string} value Value to write\r\n * @returns {Writer} `this`\r\n * @throws {TypeError} If `value` is a string and no long library is present.\r\n */\r\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\r\n\r\n/**\r\n * Writes a float (32 bit).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.float = function write_float(value) {\r\n    return this._push(util.float.writeFloatLE, 4, value);\r\n};\r\n\r\n/**\r\n * Writes a double (64 bit float).\r\n * @function\r\n * @param {number} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.double = function write_double(value) {\r\n    return this._push(util.float.writeDoubleLE, 8, value);\r\n};\r\n\r\nvar writeBytes = util.Array.prototype.set\r\n    ? function writeBytes_set(val, buf, pos) {\r\n        buf.set(val, pos); // also works for plain array values\r\n    }\r\n    /* istanbul ignore next */\r\n    : function writeBytes_for(val, buf, pos) {\r\n        for (var i = 0; i < val.length; ++i)\r\n            buf[pos + i] = val[i];\r\n    };\r\n\r\n/**\r\n * Writes a sequence of bytes.\r\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.bytes = function write_bytes(value) {\r\n    var len = value.length >>> 0;\r\n    if (!len)\r\n        return this._push(writeByte, 1, 0);\r\n    if (util.isString(value)) {\r\n        var buf = Writer.alloc(len = base64.length(value));\r\n        base64.decode(value, buf, 0);\r\n        value = buf;\r\n    }\r\n    return this.uint32(len)._push(writeBytes, len, value);\r\n};\r\n\r\n/**\r\n * Writes a string.\r\n * @param {string} value Value to write\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.string = function write_string(value) {\r\n    var len = utf8.length(value);\r\n    return len\r\n        ? this.uint32(len)._push(utf8.write, len, value)\r\n        : this._push(writeByte, 1, 0);\r\n};\r\n\r\n/**\r\n * Forks this writer's state by pushing it to a stack.\r\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.fork = function fork() {\r\n    this.states = new State(this);\r\n    this.head = this.tail = new Op(noop, 0, 0);\r\n    this.len = 0;\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets this instance to the last state.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.reset = function reset() {\r\n    if (this.states) {\r\n        this.head   = this.states.head;\r\n        this.tail   = this.states.tail;\r\n        this.len    = this.states.len;\r\n        this.states = this.states.next;\r\n    } else {\r\n        this.head = this.tail = new Op(noop, 0, 0);\r\n        this.len  = 0;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\r\n * @returns {Writer} `this`\r\n */\r\nWriter.prototype.ldelim = function ldelim() {\r\n    var head = this.head,\r\n        tail = this.tail,\r\n        len  = this.len;\r\n    this.reset().uint32(len);\r\n    if (len) {\r\n        this.tail.next = head.next; // skip noop\r\n        this.tail = tail;\r\n        this.len += len;\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Finishes the write operation.\r\n * @returns {Uint8Array} Finished buffer\r\n */\r\nWriter.prototype.finish = function finish() {\r\n    var head = this.head.next, // skip noop\r\n        buf  = this.constructor.alloc(this.len),\r\n        pos  = 0;\r\n    while (head) {\r\n        head.fn(head.val, buf, pos);\r\n        pos += head.len;\r\n        head = head.next;\r\n    }\r\n    // this.head = this.tail = null;\r\n    return buf;\r\n};\r\n\r\nWriter._configure = function(BufferWriter_) {\r\n    BufferWriter = BufferWriter_;\r\n};\r\n"},"lineCount":460}},"hash":"e06d1364672c27ed1700677b509b2e89","cacheData":{"env":{}}}