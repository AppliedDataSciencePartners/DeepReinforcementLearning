{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/readable-stream/package.json","includedInParent":true,"mtime":499162500000},{"name":"process-nextick-args","loc":{"line":26,"column":18}},{"name":"isarray","loc":{"line":32,"column":22}},{"name":"events","loc":{"line":42,"column":17}},{"name":"./internal/streams/stream","loc":{"line":50,"column":21}},{"name":"safe-buffer","loc":{"line":55,"column":21}},{"name":"core-util-is","loc":{"line":67,"column":19}},{"name":"inherits","loc":{"line":68,"column":24}},{"name":"util","loc":{"line":72,"column":24}},{"name":"./internal/streams/BufferList","loc":{"line":81,"column":25}},{"name":"./internal/streams/destroy","loc":{"line":82,"column":26}},{"name":"./_stream_duplex","loc":{"line":179,"column":29}},{"name":"string_decoder/","loc":{"line":328,"column":46}},{"name":"process"}],"generated":{"js":"\nvar global = arguments[3];\nvar process = require(\"process\");\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}","map":{"mappings":[{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":2,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":3,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":4,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":5,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":6,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":7,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":8,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":9,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":10,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":11,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":12,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":13,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":14,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":15,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":16,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":17,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":18,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":19,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":20,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":21,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":22,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":23,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":24,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":25,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":26,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":27,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":28,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":29,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":30,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":31,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":32,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":33,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":34,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":35,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":36,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":37,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":38,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":39,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":40,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":41,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":42,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":43,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":44,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":45,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":46,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":47,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":48,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":49,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":50,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":51,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":52,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":53,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":54,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":55,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":56,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":57,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":58,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":59,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":60,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":61,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":62,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":63,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":64,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":65,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":66,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":67,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":68,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":69,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":70,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":71,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":72,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":73,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":74,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":75,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":76,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":77,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":78,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":79,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":80,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":81,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":82,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":83,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":84,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":85,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":86,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":87,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":88,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":89,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":90,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":91,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":92,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":93,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":94,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":95,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":96,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":97,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":98,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":99,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":100,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":101,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":102,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":103,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":104,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":105,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":106,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":107,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":108,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":109,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":110,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":111,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":112,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":113,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":114,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":115,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":116,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":117,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":118,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":119,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":120,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":121,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":122,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":123,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":124,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":125,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":126,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":127,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":128,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":129,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":130,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":131,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":132,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":133,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":134,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":135,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":136,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":137,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":138,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":139,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":140,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":141,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":142,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":143,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":144,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":145,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":146,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":147,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":148,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":149,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":150,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":151,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":152,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":153,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":154,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":155,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":156,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":157,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":158,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":159,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":160,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":161,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":162,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":163,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":164,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":165,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":166,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":167,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":168,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":169,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":170,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":171,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":172,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":173,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":174,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":175,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":176,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":177,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":178,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":179,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":180,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":181,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":182,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":183,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":184,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":185,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":186,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":187,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":188,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":189,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":190,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":191,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":192,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":193,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":194,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":195,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":196,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":197,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":198,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":199,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":200,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":201,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":202,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":203,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":204,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":205,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":206,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":207,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":208,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":209,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":210,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":211,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":212,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":213,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":214,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":215,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":216,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":217,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":218,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":219,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":220,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":221,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":222,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":223,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":224,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":225,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":226,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":227,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":228,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":229,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":230,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":231,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":232,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":233,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":234,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":235,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":236,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":237,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":238,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":239,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":240,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":241,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":242,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":243,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":244,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":245,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":246,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":247,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":248,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":249,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":250,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":251,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":252,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":253,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":254,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":255,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":256,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":257,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":258,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":259,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":260,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":261,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":262,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":263,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":264,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":265,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":266,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":267,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":268,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":269,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":270,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":271,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":272,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":273,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":274,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":275,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":276,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":277,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":278,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":279,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":280,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":281,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":282,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":283,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":284,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":285,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":286,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":287,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":288,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":289,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":290,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":291,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":292,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":293,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":294,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":295,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":296,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":297,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":298,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":299,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":300,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":301,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":302,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":303,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":304,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":305,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":306,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":307,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":308,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":309,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":310,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":311,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":312,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":313,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":314,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":315,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":316,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":317,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":318,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":319,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":320,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":321,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":322,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":323,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":324,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":325,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":326,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":327,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":328,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":329,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":330,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":331,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":332,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":333,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":334,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":335,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":336,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":337,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":338,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":339,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":340,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":341,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":342,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":343,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":344,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":345,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":346,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":347,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":348,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":349,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":350,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":351,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":352,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":353,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":354,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":355,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":356,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":357,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":358,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":359,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":360,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":361,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":362,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":363,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":364,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":365,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":366,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":367,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":368,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":369,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":370,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":371,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":372,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":373,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":374,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":375,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":376,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":377,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":378,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":379,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":380,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":381,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":382,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":383,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":384,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":385,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":386,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":387,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":388,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":389,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":390,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":391,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":392,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":393,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":394,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":395,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":396,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":397,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":398,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":399,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":400,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":401,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":402,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":403,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":404,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":405,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":406,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":407,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":408,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":409,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":410,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":411,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":412,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":413,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":414,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":415,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":416,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":417,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":418,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":419,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":420,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":421,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":422,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":423,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":424,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":425,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":426,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":427,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":428,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":429,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":430,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":431,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":432,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":433,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":434,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":435,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":436,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":437,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":438,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":439,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":440,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":441,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":442,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":443,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":444,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":445,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":446,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":447,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":448,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":449,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":450,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":451,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":452,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":453,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":454,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":455,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":456,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":457,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":458,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":459,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":460,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":461,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":462,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":463,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":464,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":465,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":466,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":467,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":468,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":469,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":470,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":471,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":472,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":473,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":474,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":475,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":476,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":477,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":478,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":479,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":480,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":481,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":482,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":483,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":484,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":485,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":486,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":487,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":488,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":489,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":490,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":491,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":492,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":493,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":494,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":495,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":496,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":497,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":498,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":499,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":500,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":501,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":502,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":503,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":504,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":505,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":506,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":507,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":508,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":509,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":510,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":511,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":512,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":513,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":514,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":515,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":516,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":517,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":518,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":519,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":520,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":521,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":522,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":523,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":524,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":525,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":526,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":527,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":528,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":529,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":530,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":531,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":532,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":533,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":534,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":535,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":536,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":537,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":538,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":539,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":540,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":541,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":542,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":543,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":544,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":545,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":546,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":547,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":548,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":549,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":550,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":551,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":552,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":553,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":554,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":555,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":556,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":557,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":558,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":559,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":560,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":561,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":562,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":563,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":564,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":565,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":566,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":567,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":568,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":569,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":570,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":571,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":572,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":573,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":574,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":575,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":576,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":577,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":578,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":579,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":580,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":581,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":582,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":583,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":584,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":585,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":586,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":587,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":588,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":589,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":590,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":591,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":592,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":593,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":594,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":595,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":596,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":597,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":598,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":599,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":600,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":601,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":602,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":603,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":604,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":605,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":606,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":607,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":608,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":609,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":610,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":611,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":612,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":613,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":614,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":615,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":616,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":617,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":618,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":619,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":620,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":621,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":622,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":623,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":624,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":625,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":626,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":627,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":628,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":629,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":630,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":631,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":632,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":633,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":634,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":635,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":636,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":637,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":638,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":639,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":640,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":641,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":642,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":643,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":644,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":645,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":646,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":647,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":648,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":649,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":650,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":651,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":652,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":653,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":654,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":655,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":656,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":657,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":658,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":659,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":660,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":661,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":662,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":663,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":664,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":665,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":666,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":667,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":668,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":669,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":670,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":671,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":672,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":673,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":674,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":675,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":676,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":677,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":678,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":679,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":680,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":681,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":682,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":683,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":684,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":685,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":686,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":687,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":688,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":689,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":690,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":691,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":692,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":693,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":694,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":695,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":696,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":697,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":698,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":699,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":700,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":701,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":702,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":703,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":704,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":705,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":706,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":707,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":708,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":709,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":710,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":711,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":712,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":713,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":714,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":715,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":716,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":717,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":718,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":719,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":720,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":721,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":722,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":723,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":724,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":725,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":726,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":727,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":728,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":729,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":730,"column":0},"generated":{"line":733,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":731,"column":0},"generated":{"line":734,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":732,"column":0},"generated":{"line":735,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":733,"column":0},"generated":{"line":736,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":734,"column":0},"generated":{"line":737,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":735,"column":0},"generated":{"line":738,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":736,"column":0},"generated":{"line":739,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":737,"column":0},"generated":{"line":740,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":738,"column":0},"generated":{"line":741,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":739,"column":0},"generated":{"line":742,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":740,"column":0},"generated":{"line":743,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":741,"column":0},"generated":{"line":744,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":742,"column":0},"generated":{"line":745,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":743,"column":0},"generated":{"line":746,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":744,"column":0},"generated":{"line":747,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":745,"column":0},"generated":{"line":748,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":746,"column":0},"generated":{"line":749,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":747,"column":0},"generated":{"line":750,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":748,"column":0},"generated":{"line":751,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":749,"column":0},"generated":{"line":752,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":750,"column":0},"generated":{"line":753,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":751,"column":0},"generated":{"line":754,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":752,"column":0},"generated":{"line":755,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":753,"column":0},"generated":{"line":756,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":754,"column":0},"generated":{"line":757,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":755,"column":0},"generated":{"line":758,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":756,"column":0},"generated":{"line":759,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":757,"column":0},"generated":{"line":760,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":758,"column":0},"generated":{"line":761,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":759,"column":0},"generated":{"line":762,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":760,"column":0},"generated":{"line":763,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":761,"column":0},"generated":{"line":764,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":762,"column":0},"generated":{"line":765,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":763,"column":0},"generated":{"line":766,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":764,"column":0},"generated":{"line":767,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":765,"column":0},"generated":{"line":768,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":766,"column":0},"generated":{"line":769,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":767,"column":0},"generated":{"line":770,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":768,"column":0},"generated":{"line":771,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":769,"column":0},"generated":{"line":772,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":770,"column":0},"generated":{"line":773,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":771,"column":0},"generated":{"line":774,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":772,"column":0},"generated":{"line":775,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":773,"column":0},"generated":{"line":776,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":774,"column":0},"generated":{"line":777,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":775,"column":0},"generated":{"line":778,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":776,"column":0},"generated":{"line":779,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":777,"column":0},"generated":{"line":780,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":778,"column":0},"generated":{"line":781,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":779,"column":0},"generated":{"line":782,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":780,"column":0},"generated":{"line":783,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":781,"column":0},"generated":{"line":784,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":782,"column":0},"generated":{"line":785,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":783,"column":0},"generated":{"line":786,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":784,"column":0},"generated":{"line":787,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":785,"column":0},"generated":{"line":788,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":786,"column":0},"generated":{"line":789,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":787,"column":0},"generated":{"line":790,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":788,"column":0},"generated":{"line":791,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":789,"column":0},"generated":{"line":792,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":790,"column":0},"generated":{"line":793,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":791,"column":0},"generated":{"line":794,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":792,"column":0},"generated":{"line":795,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":793,"column":0},"generated":{"line":796,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":794,"column":0},"generated":{"line":797,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":795,"column":0},"generated":{"line":798,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":796,"column":0},"generated":{"line":799,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":797,"column":0},"generated":{"line":800,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":798,"column":0},"generated":{"line":801,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":799,"column":0},"generated":{"line":802,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":800,"column":0},"generated":{"line":803,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":801,"column":0},"generated":{"line":804,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":802,"column":0},"generated":{"line":805,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":803,"column":0},"generated":{"line":806,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":804,"column":0},"generated":{"line":807,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":805,"column":0},"generated":{"line":808,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":806,"column":0},"generated":{"line":809,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":807,"column":0},"generated":{"line":810,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":808,"column":0},"generated":{"line":811,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":809,"column":0},"generated":{"line":812,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":810,"column":0},"generated":{"line":813,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":811,"column":0},"generated":{"line":814,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":812,"column":0},"generated":{"line":815,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":813,"column":0},"generated":{"line":816,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":814,"column":0},"generated":{"line":817,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":815,"column":0},"generated":{"line":818,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":816,"column":0},"generated":{"line":819,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":817,"column":0},"generated":{"line":820,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":818,"column":0},"generated":{"line":821,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":819,"column":0},"generated":{"line":822,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":820,"column":0},"generated":{"line":823,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":821,"column":0},"generated":{"line":824,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":822,"column":0},"generated":{"line":825,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":823,"column":0},"generated":{"line":826,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":824,"column":0},"generated":{"line":827,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":825,"column":0},"generated":{"line":828,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":826,"column":0},"generated":{"line":829,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":827,"column":0},"generated":{"line":830,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":828,"column":0},"generated":{"line":831,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":829,"column":0},"generated":{"line":832,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":830,"column":0},"generated":{"line":833,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":831,"column":0},"generated":{"line":834,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":832,"column":0},"generated":{"line":835,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":833,"column":0},"generated":{"line":836,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":834,"column":0},"generated":{"line":837,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":835,"column":0},"generated":{"line":838,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":836,"column":0},"generated":{"line":839,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":837,"column":0},"generated":{"line":840,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":838,"column":0},"generated":{"line":841,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":839,"column":0},"generated":{"line":842,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":840,"column":0},"generated":{"line":843,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":841,"column":0},"generated":{"line":844,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":842,"column":0},"generated":{"line":845,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":843,"column":0},"generated":{"line":846,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":844,"column":0},"generated":{"line":847,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":845,"column":0},"generated":{"line":848,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":846,"column":0},"generated":{"line":849,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":847,"column":0},"generated":{"line":850,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":848,"column":0},"generated":{"line":851,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":849,"column":0},"generated":{"line":852,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":850,"column":0},"generated":{"line":853,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":851,"column":0},"generated":{"line":854,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":852,"column":0},"generated":{"line":855,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":853,"column":0},"generated":{"line":856,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":854,"column":0},"generated":{"line":857,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":855,"column":0},"generated":{"line":858,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":856,"column":0},"generated":{"line":859,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":857,"column":0},"generated":{"line":860,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":858,"column":0},"generated":{"line":861,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":859,"column":0},"generated":{"line":862,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":860,"column":0},"generated":{"line":863,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":861,"column":0},"generated":{"line":864,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":862,"column":0},"generated":{"line":865,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":863,"column":0},"generated":{"line":866,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":864,"column":0},"generated":{"line":867,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":865,"column":0},"generated":{"line":868,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":866,"column":0},"generated":{"line":869,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":867,"column":0},"generated":{"line":870,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":868,"column":0},"generated":{"line":871,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":869,"column":0},"generated":{"line":872,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":870,"column":0},"generated":{"line":873,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":871,"column":0},"generated":{"line":874,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":872,"column":0},"generated":{"line":875,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":873,"column":0},"generated":{"line":876,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":874,"column":0},"generated":{"line":877,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":875,"column":0},"generated":{"line":878,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":876,"column":0},"generated":{"line":879,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":877,"column":0},"generated":{"line":880,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":878,"column":0},"generated":{"line":881,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":879,"column":0},"generated":{"line":882,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":880,"column":0},"generated":{"line":883,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":881,"column":0},"generated":{"line":884,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":882,"column":0},"generated":{"line":885,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":883,"column":0},"generated":{"line":886,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":884,"column":0},"generated":{"line":887,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":885,"column":0},"generated":{"line":888,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":886,"column":0},"generated":{"line":889,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":887,"column":0},"generated":{"line":890,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":888,"column":0},"generated":{"line":891,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":889,"column":0},"generated":{"line":892,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":890,"column":0},"generated":{"line":893,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":891,"column":0},"generated":{"line":894,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":892,"column":0},"generated":{"line":895,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":893,"column":0},"generated":{"line":896,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":894,"column":0},"generated":{"line":897,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":895,"column":0},"generated":{"line":898,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":896,"column":0},"generated":{"line":899,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":897,"column":0},"generated":{"line":900,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":898,"column":0},"generated":{"line":901,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":899,"column":0},"generated":{"line":902,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":900,"column":0},"generated":{"line":903,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":901,"column":0},"generated":{"line":904,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":902,"column":0},"generated":{"line":905,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":903,"column":0},"generated":{"line":906,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":904,"column":0},"generated":{"line":907,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":905,"column":0},"generated":{"line":908,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":906,"column":0},"generated":{"line":909,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":907,"column":0},"generated":{"line":910,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":908,"column":0},"generated":{"line":911,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":909,"column":0},"generated":{"line":912,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":910,"column":0},"generated":{"line":913,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":911,"column":0},"generated":{"line":914,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":912,"column":0},"generated":{"line":915,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":913,"column":0},"generated":{"line":916,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":914,"column":0},"generated":{"line":917,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":915,"column":0},"generated":{"line":918,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":916,"column":0},"generated":{"line":919,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":917,"column":0},"generated":{"line":920,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":918,"column":0},"generated":{"line":921,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":919,"column":0},"generated":{"line":922,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":920,"column":0},"generated":{"line":923,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":921,"column":0},"generated":{"line":924,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":922,"column":0},"generated":{"line":925,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":923,"column":0},"generated":{"line":926,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":924,"column":0},"generated":{"line":927,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":925,"column":0},"generated":{"line":928,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":926,"column":0},"generated":{"line":929,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":927,"column":0},"generated":{"line":930,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":928,"column":0},"generated":{"line":931,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":929,"column":0},"generated":{"line":932,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":930,"column":0},"generated":{"line":933,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":931,"column":0},"generated":{"line":934,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":932,"column":0},"generated":{"line":935,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":933,"column":0},"generated":{"line":936,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":934,"column":0},"generated":{"line":937,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":935,"column":0},"generated":{"line":938,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":936,"column":0},"generated":{"line":939,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":937,"column":0},"generated":{"line":940,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":938,"column":0},"generated":{"line":941,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":939,"column":0},"generated":{"line":942,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":940,"column":0},"generated":{"line":943,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":941,"column":0},"generated":{"line":944,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":942,"column":0},"generated":{"line":945,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":943,"column":0},"generated":{"line":946,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":944,"column":0},"generated":{"line":947,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":945,"column":0},"generated":{"line":948,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":946,"column":0},"generated":{"line":949,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":947,"column":0},"generated":{"line":950,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":948,"column":0},"generated":{"line":951,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":949,"column":0},"generated":{"line":952,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":950,"column":0},"generated":{"line":953,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":951,"column":0},"generated":{"line":954,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":952,"column":0},"generated":{"line":955,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":953,"column":0},"generated":{"line":956,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":954,"column":0},"generated":{"line":957,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":955,"column":0},"generated":{"line":958,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":956,"column":0},"generated":{"line":959,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":957,"column":0},"generated":{"line":960,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":958,"column":0},"generated":{"line":961,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":959,"column":0},"generated":{"line":962,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":960,"column":0},"generated":{"line":963,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":961,"column":0},"generated":{"line":964,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":962,"column":0},"generated":{"line":965,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":963,"column":0},"generated":{"line":966,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":964,"column":0},"generated":{"line":967,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":965,"column":0},"generated":{"line":968,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":966,"column":0},"generated":{"line":969,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":967,"column":0},"generated":{"line":970,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":968,"column":0},"generated":{"line":971,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":969,"column":0},"generated":{"line":972,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":970,"column":0},"generated":{"line":973,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":971,"column":0},"generated":{"line":974,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":972,"column":0},"generated":{"line":975,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":973,"column":0},"generated":{"line":976,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":974,"column":0},"generated":{"line":977,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":975,"column":0},"generated":{"line":978,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":976,"column":0},"generated":{"line":979,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":977,"column":0},"generated":{"line":980,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":978,"column":0},"generated":{"line":981,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":979,"column":0},"generated":{"line":982,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":980,"column":0},"generated":{"line":983,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":981,"column":0},"generated":{"line":984,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":982,"column":0},"generated":{"line":985,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":983,"column":0},"generated":{"line":986,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":984,"column":0},"generated":{"line":987,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":985,"column":0},"generated":{"line":988,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":986,"column":0},"generated":{"line":989,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":987,"column":0},"generated":{"line":990,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":988,"column":0},"generated":{"line":991,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":989,"column":0},"generated":{"line":992,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":990,"column":0},"generated":{"line":993,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":991,"column":0},"generated":{"line":994,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":992,"column":0},"generated":{"line":995,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":993,"column":0},"generated":{"line":996,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":994,"column":0},"generated":{"line":997,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":995,"column":0},"generated":{"line":998,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":996,"column":0},"generated":{"line":999,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":997,"column":0},"generated":{"line":1000,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":998,"column":0},"generated":{"line":1001,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":999,"column":0},"generated":{"line":1002,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1000,"column":0},"generated":{"line":1003,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1001,"column":0},"generated":{"line":1004,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1002,"column":0},"generated":{"line":1005,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1003,"column":0},"generated":{"line":1006,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1004,"column":0},"generated":{"line":1007,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1005,"column":0},"generated":{"line":1008,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1006,"column":0},"generated":{"line":1009,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1007,"column":0},"generated":{"line":1010,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1008,"column":0},"generated":{"line":1011,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1009,"column":0},"generated":{"line":1012,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1010,"column":0},"generated":{"line":1013,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1011,"column":0},"generated":{"line":1014,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1012,"column":0},"generated":{"line":1015,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1013,"column":0},"generated":{"line":1016,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1014,"column":0},"generated":{"line":1017,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1015,"column":0},"generated":{"line":1018,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1016,"column":0},"generated":{"line":1019,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1017,"column":0},"generated":{"line":1020,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1018,"column":0},"generated":{"line":1021,"column":0}},{"source":"node_modules/readable-stream/lib/_stream_readable.js","original":{"line":1019,"column":0},"generated":{"line":1022,"column":0}}],"sources":{"node_modules/readable-stream/lib/_stream_readable.js":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\n/*<replacement>*/\n\nvar pna = require('process-nextick-args');\n/*</replacement>*/\n\nmodule.exports = Readable;\n\n/*<replacement>*/\nvar isArray = require('isarray');\n/*</replacement>*/\n\n/*<replacement>*/\nvar Duplex;\n/*</replacement>*/\n\nReadable.ReadableState = ReadableState;\n\n/*<replacement>*/\nvar EE = require('events').EventEmitter;\n\nvar EElistenerCount = function (emitter, type) {\n  return emitter.listeners(type).length;\n};\n/*</replacement>*/\n\n/*<replacement>*/\nvar Stream = require('./internal/streams/stream');\n/*</replacement>*/\n\n/*<replacement>*/\n\nvar Buffer = require('safe-buffer').Buffer;\nvar OurUint8Array = global.Uint8Array || function () {};\nfunction _uint8ArrayToBuffer(chunk) {\n  return Buffer.from(chunk);\n}\nfunction _isUint8Array(obj) {\n  return Buffer.isBuffer(obj) || obj instanceof OurUint8Array;\n}\n\n/*</replacement>*/\n\n/*<replacement>*/\nvar util = require('core-util-is');\nutil.inherits = require('inherits');\n/*</replacement>*/\n\n/*<replacement>*/\nvar debugUtil = require('util');\nvar debug = void 0;\nif (debugUtil && debugUtil.debuglog) {\n  debug = debugUtil.debuglog('stream');\n} else {\n  debug = function () {};\n}\n/*</replacement>*/\n\nvar BufferList = require('./internal/streams/BufferList');\nvar destroyImpl = require('./internal/streams/destroy');\nvar StringDecoder;\n\nutil.inherits(Readable, Stream);\n\nvar kProxyEvents = ['error', 'close', 'destroy', 'pause', 'resume'];\n\nfunction prependListener(emitter, event, fn) {\n  // Sadly this is not cacheable as some libraries bundle their own\n  // event emitter implementation with them.\n  if (typeof emitter.prependListener === 'function') return emitter.prependListener(event, fn);\n\n  // This is a hack to make sure that our error handler is attached before any\n  // userland ones.  NEVER DO THIS. This is here only because this code needs\n  // to continue to work with older versions of Node.js that do not include\n  // the prependListener() method. The goal is to eventually remove this hack.\n  if (!emitter._events || !emitter._events[event]) emitter.on(event, fn);else if (isArray(emitter._events[event])) emitter._events[event].unshift(fn);else emitter._events[event] = [fn, emitter._events[event]];\n}\n\nfunction ReadableState(options, stream) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  options = options || {};\n\n  // Duplex streams are both readable and writable, but share\n  // the same options object.\n  // However, some cases require setting options to different\n  // values for the readable and the writable sides of the duplex stream.\n  // These options can be provided separately as readableXXX and writableXXX.\n  var isDuplex = stream instanceof Duplex;\n\n  // object stream flag. Used to make read(n) ignore n and to\n  // make all the buffer merging and length checks go away\n  this.objectMode = !!options.objectMode;\n\n  if (isDuplex) this.objectMode = this.objectMode || !!options.readableObjectMode;\n\n  // the point at which it stops calling _read() to fill the buffer\n  // Note: 0 is a valid value, means \"don't call _read preemptively ever\"\n  var hwm = options.highWaterMark;\n  var readableHwm = options.readableHighWaterMark;\n  var defaultHwm = this.objectMode ? 16 : 16 * 1024;\n\n  if (hwm || hwm === 0) this.highWaterMark = hwm;else if (isDuplex && (readableHwm || readableHwm === 0)) this.highWaterMark = readableHwm;else this.highWaterMark = defaultHwm;\n\n  // cast to ints.\n  this.highWaterMark = Math.floor(this.highWaterMark);\n\n  // A linked list is used to store data chunks instead of an array because the\n  // linked list can remove elements from the beginning faster than\n  // array.shift()\n  this.buffer = new BufferList();\n  this.length = 0;\n  this.pipes = null;\n  this.pipesCount = 0;\n  this.flowing = null;\n  this.ended = false;\n  this.endEmitted = false;\n  this.reading = false;\n\n  // a flag to be able to tell if the event 'readable'/'data' is emitted\n  // immediately, or on a later tick.  We set this to true at first, because\n  // any actions that shouldn't happen until \"later\" should generally also\n  // not happen before the first read call.\n  this.sync = true;\n\n  // whenever we return null, then we set a flag to say\n  // that we're awaiting a 'readable' event emission.\n  this.needReadable = false;\n  this.emittedReadable = false;\n  this.readableListening = false;\n  this.resumeScheduled = false;\n\n  // has it been destroyed\n  this.destroyed = false;\n\n  // Crypto is kind of old and crusty.  Historically, its default string\n  // encoding is 'binary' so we have to make this configurable.\n  // Everything else in the universe uses 'utf8', though.\n  this.defaultEncoding = options.defaultEncoding || 'utf8';\n\n  // the number of writers that are awaiting a drain event in .pipe()s\n  this.awaitDrain = 0;\n\n  // if true, a maybeReadMore has been scheduled\n  this.readingMore = false;\n\n  this.decoder = null;\n  this.encoding = null;\n  if (options.encoding) {\n    if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n    this.decoder = new StringDecoder(options.encoding);\n    this.encoding = options.encoding;\n  }\n}\n\nfunction Readable(options) {\n  Duplex = Duplex || require('./_stream_duplex');\n\n  if (!(this instanceof Readable)) return new Readable(options);\n\n  this._readableState = new ReadableState(options, this);\n\n  // legacy\n  this.readable = true;\n\n  if (options) {\n    if (typeof options.read === 'function') this._read = options.read;\n\n    if (typeof options.destroy === 'function') this._destroy = options.destroy;\n  }\n\n  Stream.call(this);\n}\n\nObject.defineProperty(Readable.prototype, 'destroyed', {\n  get: function () {\n    if (this._readableState === undefined) {\n      return false;\n    }\n    return this._readableState.destroyed;\n  },\n  set: function (value) {\n    // we ignore the value if the stream\n    // has not been initialized yet\n    if (!this._readableState) {\n      return;\n    }\n\n    // backward compatibility, the user is explicitly\n    // managing destroyed\n    this._readableState.destroyed = value;\n  }\n});\n\nReadable.prototype.destroy = destroyImpl.destroy;\nReadable.prototype._undestroy = destroyImpl.undestroy;\nReadable.prototype._destroy = function (err, cb) {\n  this.push(null);\n  cb(err);\n};\n\n// Manually shove something into the read() buffer.\n// This returns true if the highWaterMark has not been hit yet,\n// similar to how Writable.write() returns true if you should\n// write() some more.\nReadable.prototype.push = function (chunk, encoding) {\n  var state = this._readableState;\n  var skipChunkCheck;\n\n  if (!state.objectMode) {\n    if (typeof chunk === 'string') {\n      encoding = encoding || state.defaultEncoding;\n      if (encoding !== state.encoding) {\n        chunk = Buffer.from(chunk, encoding);\n        encoding = '';\n      }\n      skipChunkCheck = true;\n    }\n  } else {\n    skipChunkCheck = true;\n  }\n\n  return readableAddChunk(this, chunk, encoding, false, skipChunkCheck);\n};\n\n// Unshift should *always* be something directly out of read()\nReadable.prototype.unshift = function (chunk) {\n  return readableAddChunk(this, chunk, null, true, false);\n};\n\nfunction readableAddChunk(stream, chunk, encoding, addToFront, skipChunkCheck) {\n  var state = stream._readableState;\n  if (chunk === null) {\n    state.reading = false;\n    onEofChunk(stream, state);\n  } else {\n    var er;\n    if (!skipChunkCheck) er = chunkInvalid(state, chunk);\n    if (er) {\n      stream.emit('error', er);\n    } else if (state.objectMode || chunk && chunk.length > 0) {\n      if (typeof chunk !== 'string' && !state.objectMode && Object.getPrototypeOf(chunk) !== Buffer.prototype) {\n        chunk = _uint8ArrayToBuffer(chunk);\n      }\n\n      if (addToFront) {\n        if (state.endEmitted) stream.emit('error', new Error('stream.unshift() after end event'));else addChunk(stream, state, chunk, true);\n      } else if (state.ended) {\n        stream.emit('error', new Error('stream.push() after EOF'));\n      } else {\n        state.reading = false;\n        if (state.decoder && !encoding) {\n          chunk = state.decoder.write(chunk);\n          if (state.objectMode || chunk.length !== 0) addChunk(stream, state, chunk, false);else maybeReadMore(stream, state);\n        } else {\n          addChunk(stream, state, chunk, false);\n        }\n      }\n    } else if (!addToFront) {\n      state.reading = false;\n    }\n  }\n\n  return needMoreData(state);\n}\n\nfunction addChunk(stream, state, chunk, addToFront) {\n  if (state.flowing && state.length === 0 && !state.sync) {\n    stream.emit('data', chunk);\n    stream.read(0);\n  } else {\n    // update the buffer info.\n    state.length += state.objectMode ? 1 : chunk.length;\n    if (addToFront) state.buffer.unshift(chunk);else state.buffer.push(chunk);\n\n    if (state.needReadable) emitReadable(stream);\n  }\n  maybeReadMore(stream, state);\n}\n\nfunction chunkInvalid(state, chunk) {\n  var er;\n  if (!_isUint8Array(chunk) && typeof chunk !== 'string' && chunk !== undefined && !state.objectMode) {\n    er = new TypeError('Invalid non-string/buffer chunk');\n  }\n  return er;\n}\n\n// if it's past the high water mark, we can push in some more.\n// Also, if we have no data yet, we can stand some\n// more bytes.  This is to work around cases where hwm=0,\n// such as the repl.  Also, if the push() triggered a\n// readable event, and the user called read(largeNumber) such that\n// needReadable was set, then we ought to push more, so that another\n// 'readable' event will be triggered.\nfunction needMoreData(state) {\n  return !state.ended && (state.needReadable || state.length < state.highWaterMark || state.length === 0);\n}\n\nReadable.prototype.isPaused = function () {\n  return this._readableState.flowing === false;\n};\n\n// backwards compatibility.\nReadable.prototype.setEncoding = function (enc) {\n  if (!StringDecoder) StringDecoder = require('string_decoder/').StringDecoder;\n  this._readableState.decoder = new StringDecoder(enc);\n  this._readableState.encoding = enc;\n  return this;\n};\n\n// Don't raise the hwm > 8MB\nvar MAX_HWM = 0x800000;\nfunction computeNewHighWaterMark(n) {\n  if (n >= MAX_HWM) {\n    n = MAX_HWM;\n  } else {\n    // Get the next highest power of 2 to prevent increasing hwm excessively in\n    // tiny amounts\n    n--;\n    n |= n >>> 1;\n    n |= n >>> 2;\n    n |= n >>> 4;\n    n |= n >>> 8;\n    n |= n >>> 16;\n    n++;\n  }\n  return n;\n}\n\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction howMuchToRead(n, state) {\n  if (n <= 0 || state.length === 0 && state.ended) return 0;\n  if (state.objectMode) return 1;\n  if (n !== n) {\n    // Only flow one buffer at a time\n    if (state.flowing && state.length) return state.buffer.head.data.length;else return state.length;\n  }\n  // If we're asking for more than the current hwm, then raise the hwm.\n  if (n > state.highWaterMark) state.highWaterMark = computeNewHighWaterMark(n);\n  if (n <= state.length) return n;\n  // Don't have enough\n  if (!state.ended) {\n    state.needReadable = true;\n    return 0;\n  }\n  return state.length;\n}\n\n// you can override either this method, or the async _read(n) below.\nReadable.prototype.read = function (n) {\n  debug('read', n);\n  n = parseInt(n, 10);\n  var state = this._readableState;\n  var nOrig = n;\n\n  if (n !== 0) state.emittedReadable = false;\n\n  // if we're doing read(0) to trigger a readable event, but we\n  // already have a bunch of data in the buffer, then just trigger\n  // the 'readable' event and move on.\n  if (n === 0 && state.needReadable && (state.length >= state.highWaterMark || state.ended)) {\n    debug('read: emitReadable', state.length, state.ended);\n    if (state.length === 0 && state.ended) endReadable(this);else emitReadable(this);\n    return null;\n  }\n\n  n = howMuchToRead(n, state);\n\n  // if we've ended, and we're now clear, then finish it up.\n  if (n === 0 && state.ended) {\n    if (state.length === 0) endReadable(this);\n    return null;\n  }\n\n  // All the actual chunk generation logic needs to be\n  // *below* the call to _read.  The reason is that in certain\n  // synthetic stream cases, such as passthrough streams, _read\n  // may be a completely synchronous operation which may change\n  // the state of the read buffer, providing enough data when\n  // before there was *not* enough.\n  //\n  // So, the steps are:\n  // 1. Figure out what the state of things will be after we do\n  // a read from the buffer.\n  //\n  // 2. If that resulting state will trigger a _read, then call _read.\n  // Note that this may be asynchronous, or synchronous.  Yes, it is\n  // deeply ugly to write APIs this way, but that still doesn't mean\n  // that the Readable class should behave improperly, as streams are\n  // designed to be sync/async agnostic.\n  // Take note if the _read call is sync or async (ie, if the read call\n  // has returned yet), so that we know whether or not it's safe to emit\n  // 'readable' etc.\n  //\n  // 3. Actually pull the requested chunks out of the buffer and return.\n\n  // if we need a readable event, then we need to do some reading.\n  var doRead = state.needReadable;\n  debug('need readable', doRead);\n\n  // if we currently have less than the highWaterMark, then also read some\n  if (state.length === 0 || state.length - n < state.highWaterMark) {\n    doRead = true;\n    debug('length less than watermark', doRead);\n  }\n\n  // however, if we've ended, then there's no point, and if we're already\n  // reading, then it's unnecessary.\n  if (state.ended || state.reading) {\n    doRead = false;\n    debug('reading or ended', doRead);\n  } else if (doRead) {\n    debug('do read');\n    state.reading = true;\n    state.sync = true;\n    // if the length is currently zero, then we *need* a readable event.\n    if (state.length === 0) state.needReadable = true;\n    // call internal read method\n    this._read(state.highWaterMark);\n    state.sync = false;\n    // If _read pushed data synchronously, then `reading` will be false,\n    // and we need to re-evaluate how much data we can return to the user.\n    if (!state.reading) n = howMuchToRead(nOrig, state);\n  }\n\n  var ret;\n  if (n > 0) ret = fromList(n, state);else ret = null;\n\n  if (ret === null) {\n    state.needReadable = true;\n    n = 0;\n  } else {\n    state.length -= n;\n  }\n\n  if (state.length === 0) {\n    // If we have nothing in the buffer, then we want to know\n    // as soon as we *do* get something into the buffer.\n    if (!state.ended) state.needReadable = true;\n\n    // If we tried to read() past the EOF, then emit end on the next tick.\n    if (nOrig !== n && state.ended) endReadable(this);\n  }\n\n  if (ret !== null) this.emit('data', ret);\n\n  return ret;\n};\n\nfunction onEofChunk(stream, state) {\n  if (state.ended) return;\n  if (state.decoder) {\n    var chunk = state.decoder.end();\n    if (chunk && chunk.length) {\n      state.buffer.push(chunk);\n      state.length += state.objectMode ? 1 : chunk.length;\n    }\n  }\n  state.ended = true;\n\n  // emit 'readable' now to make sure it gets picked up.\n  emitReadable(stream);\n}\n\n// Don't emit readable right away in sync mode, because this can trigger\n// another read() call => stack overflow.  This way, it might trigger\n// a nextTick recursion warning, but that's not so bad.\nfunction emitReadable(stream) {\n  var state = stream._readableState;\n  state.needReadable = false;\n  if (!state.emittedReadable) {\n    debug('emitReadable', state.flowing);\n    state.emittedReadable = true;\n    if (state.sync) pna.nextTick(emitReadable_, stream);else emitReadable_(stream);\n  }\n}\n\nfunction emitReadable_(stream) {\n  debug('emit readable');\n  stream.emit('readable');\n  flow(stream);\n}\n\n// at this point, the user has presumably seen the 'readable' event,\n// and called read() to consume some data.  that may have triggered\n// in turn another _read(n) call, in which case reading = true if\n// it's in progress.\n// However, if we're not ended, or reading, and the length < hwm,\n// then go ahead and try to read some more preemptively.\nfunction maybeReadMore(stream, state) {\n  if (!state.readingMore) {\n    state.readingMore = true;\n    pna.nextTick(maybeReadMore_, stream, state);\n  }\n}\n\nfunction maybeReadMore_(stream, state) {\n  var len = state.length;\n  while (!state.reading && !state.flowing && !state.ended && state.length < state.highWaterMark) {\n    debug('maybeReadMore read 0');\n    stream.read(0);\n    if (len === state.length)\n      // didn't get any data, stop spinning.\n      break;else len = state.length;\n  }\n  state.readingMore = false;\n}\n\n// abstract method.  to be overridden in specific implementation classes.\n// call cb(er, data) where data is <= n in length.\n// for virtual (non-string, non-buffer) streams, \"length\" is somewhat\n// arbitrary, and perhaps not very meaningful.\nReadable.prototype._read = function (n) {\n  this.emit('error', new Error('_read() is not implemented'));\n};\n\nReadable.prototype.pipe = function (dest, pipeOpts) {\n  var src = this;\n  var state = this._readableState;\n\n  switch (state.pipesCount) {\n    case 0:\n      state.pipes = dest;\n      break;\n    case 1:\n      state.pipes = [state.pipes, dest];\n      break;\n    default:\n      state.pipes.push(dest);\n      break;\n  }\n  state.pipesCount += 1;\n  debug('pipe count=%d opts=%j', state.pipesCount, pipeOpts);\n\n  var doEnd = (!pipeOpts || pipeOpts.end !== false) && dest !== process.stdout && dest !== process.stderr;\n\n  var endFn = doEnd ? onend : unpipe;\n  if (state.endEmitted) pna.nextTick(endFn);else src.once('end', endFn);\n\n  dest.on('unpipe', onunpipe);\n  function onunpipe(readable, unpipeInfo) {\n    debug('onunpipe');\n    if (readable === src) {\n      if (unpipeInfo && unpipeInfo.hasUnpiped === false) {\n        unpipeInfo.hasUnpiped = true;\n        cleanup();\n      }\n    }\n  }\n\n  function onend() {\n    debug('onend');\n    dest.end();\n  }\n\n  // when the dest drains, it reduces the awaitDrain counter\n  // on the source.  This would be more elegant with a .once()\n  // handler in flow(), but adding and removing repeatedly is\n  // too slow.\n  var ondrain = pipeOnDrain(src);\n  dest.on('drain', ondrain);\n\n  var cleanedUp = false;\n  function cleanup() {\n    debug('cleanup');\n    // cleanup event handlers once the pipe is broken\n    dest.removeListener('close', onclose);\n    dest.removeListener('finish', onfinish);\n    dest.removeListener('drain', ondrain);\n    dest.removeListener('error', onerror);\n    dest.removeListener('unpipe', onunpipe);\n    src.removeListener('end', onend);\n    src.removeListener('end', unpipe);\n    src.removeListener('data', ondata);\n\n    cleanedUp = true;\n\n    // if the reader is waiting for a drain event from this\n    // specific writer, then it would cause it to never start\n    // flowing again.\n    // So, if this is awaiting a drain, then we just call it now.\n    // If we don't know, then assume that we are waiting for one.\n    if (state.awaitDrain && (!dest._writableState || dest._writableState.needDrain)) ondrain();\n  }\n\n  // If the user pushes more data while we're writing to dest then we'll end up\n  // in ondata again. However, we only want to increase awaitDrain once because\n  // dest will only emit one 'drain' event for the multiple writes.\n  // => Introduce a guard on increasing awaitDrain.\n  var increasedAwaitDrain = false;\n  src.on('data', ondata);\n  function ondata(chunk) {\n    debug('ondata');\n    increasedAwaitDrain = false;\n    var ret = dest.write(chunk);\n    if (false === ret && !increasedAwaitDrain) {\n      // If the user unpiped during `dest.write()`, it is possible\n      // to get stuck in a permanently paused state if that write\n      // also returned false.\n      // => Check whether `dest` is still a piping destination.\n      if ((state.pipesCount === 1 && state.pipes === dest || state.pipesCount > 1 && indexOf(state.pipes, dest) !== -1) && !cleanedUp) {\n        debug('false write response, pause', src._readableState.awaitDrain);\n        src._readableState.awaitDrain++;\n        increasedAwaitDrain = true;\n      }\n      src.pause();\n    }\n  }\n\n  // if the dest has an error, then stop piping into it.\n  // however, don't suppress the throwing behavior for this.\n  function onerror(er) {\n    debug('onerror', er);\n    unpipe();\n    dest.removeListener('error', onerror);\n    if (EElistenerCount(dest, 'error') === 0) dest.emit('error', er);\n  }\n\n  // Make sure our error handler is attached before userland ones.\n  prependListener(dest, 'error', onerror);\n\n  // Both close and finish should trigger unpipe, but only once.\n  function onclose() {\n    dest.removeListener('finish', onfinish);\n    unpipe();\n  }\n  dest.once('close', onclose);\n  function onfinish() {\n    debug('onfinish');\n    dest.removeListener('close', onclose);\n    unpipe();\n  }\n  dest.once('finish', onfinish);\n\n  function unpipe() {\n    debug('unpipe');\n    src.unpipe(dest);\n  }\n\n  // tell the dest that it's being piped to\n  dest.emit('pipe', src);\n\n  // start the flow if it hasn't been started already.\n  if (!state.flowing) {\n    debug('pipe resume');\n    src.resume();\n  }\n\n  return dest;\n};\n\nfunction pipeOnDrain(src) {\n  return function () {\n    var state = src._readableState;\n    debug('pipeOnDrain', state.awaitDrain);\n    if (state.awaitDrain) state.awaitDrain--;\n    if (state.awaitDrain === 0 && EElistenerCount(src, 'data')) {\n      state.flowing = true;\n      flow(src);\n    }\n  };\n}\n\nReadable.prototype.unpipe = function (dest) {\n  var state = this._readableState;\n  var unpipeInfo = { hasUnpiped: false };\n\n  // if we're not piping anywhere, then do nothing.\n  if (state.pipesCount === 0) return this;\n\n  // just one destination.  most common case.\n  if (state.pipesCount === 1) {\n    // passed in one, but it's not the right one.\n    if (dest && dest !== state.pipes) return this;\n\n    if (!dest) dest = state.pipes;\n\n    // got a match.\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n    if (dest) dest.emit('unpipe', this, unpipeInfo);\n    return this;\n  }\n\n  // slow case. multiple pipe destinations.\n\n  if (!dest) {\n    // remove all.\n    var dests = state.pipes;\n    var len = state.pipesCount;\n    state.pipes = null;\n    state.pipesCount = 0;\n    state.flowing = false;\n\n    for (var i = 0; i < len; i++) {\n      dests[i].emit('unpipe', this, unpipeInfo);\n    }return this;\n  }\n\n  // try to find the right one.\n  var index = indexOf(state.pipes, dest);\n  if (index === -1) return this;\n\n  state.pipes.splice(index, 1);\n  state.pipesCount -= 1;\n  if (state.pipesCount === 1) state.pipes = state.pipes[0];\n\n  dest.emit('unpipe', this, unpipeInfo);\n\n  return this;\n};\n\n// set up data events if they are asked for\n// Ensure readable listeners eventually get something\nReadable.prototype.on = function (ev, fn) {\n  var res = Stream.prototype.on.call(this, ev, fn);\n\n  if (ev === 'data') {\n    // Start flowing on next tick if stream isn't explicitly paused\n    if (this._readableState.flowing !== false) this.resume();\n  } else if (ev === 'readable') {\n    var state = this._readableState;\n    if (!state.endEmitted && !state.readableListening) {\n      state.readableListening = state.needReadable = true;\n      state.emittedReadable = false;\n      if (!state.reading) {\n        pna.nextTick(nReadingNextTick, this);\n      } else if (state.length) {\n        emitReadable(this);\n      }\n    }\n  }\n\n  return res;\n};\nReadable.prototype.addListener = Readable.prototype.on;\n\nfunction nReadingNextTick(self) {\n  debug('readable nexttick read 0');\n  self.read(0);\n}\n\n// pause() and resume() are remnants of the legacy readable stream API\n// If the user uses them, then switch into old mode.\nReadable.prototype.resume = function () {\n  var state = this._readableState;\n  if (!state.flowing) {\n    debug('resume');\n    state.flowing = true;\n    resume(this, state);\n  }\n  return this;\n};\n\nfunction resume(stream, state) {\n  if (!state.resumeScheduled) {\n    state.resumeScheduled = true;\n    pna.nextTick(resume_, stream, state);\n  }\n}\n\nfunction resume_(stream, state) {\n  if (!state.reading) {\n    debug('resume read 0');\n    stream.read(0);\n  }\n\n  state.resumeScheduled = false;\n  state.awaitDrain = 0;\n  stream.emit('resume');\n  flow(stream);\n  if (state.flowing && !state.reading) stream.read(0);\n}\n\nReadable.prototype.pause = function () {\n  debug('call pause flowing=%j', this._readableState.flowing);\n  if (false !== this._readableState.flowing) {\n    debug('pause');\n    this._readableState.flowing = false;\n    this.emit('pause');\n  }\n  return this;\n};\n\nfunction flow(stream) {\n  var state = stream._readableState;\n  debug('flow', state.flowing);\n  while (state.flowing && stream.read() !== null) {}\n}\n\n// wrap an old-style stream as the async data source.\n// This is *not* part of the readable stream interface.\n// It is an ugly unfortunate mess of history.\nReadable.prototype.wrap = function (stream) {\n  var _this = this;\n\n  var state = this._readableState;\n  var paused = false;\n\n  stream.on('end', function () {\n    debug('wrapped end');\n    if (state.decoder && !state.ended) {\n      var chunk = state.decoder.end();\n      if (chunk && chunk.length) _this.push(chunk);\n    }\n\n    _this.push(null);\n  });\n\n  stream.on('data', function (chunk) {\n    debug('wrapped data');\n    if (state.decoder) chunk = state.decoder.write(chunk);\n\n    // don't skip over falsy values in objectMode\n    if (state.objectMode && (chunk === null || chunk === undefined)) return;else if (!state.objectMode && (!chunk || !chunk.length)) return;\n\n    var ret = _this.push(chunk);\n    if (!ret) {\n      paused = true;\n      stream.pause();\n    }\n  });\n\n  // proxy all the other methods.\n  // important when wrapping filters and duplexes.\n  for (var i in stream) {\n    if (this[i] === undefined && typeof stream[i] === 'function') {\n      this[i] = function (method) {\n        return function () {\n          return stream[method].apply(stream, arguments);\n        };\n      }(i);\n    }\n  }\n\n  // proxy certain important events.\n  for (var n = 0; n < kProxyEvents.length; n++) {\n    stream.on(kProxyEvents[n], this.emit.bind(this, kProxyEvents[n]));\n  }\n\n  // when we try to consume some more bytes, simply unpause the\n  // underlying stream.\n  this._read = function (n) {\n    debug('wrapped _read', n);\n    if (paused) {\n      paused = false;\n      stream.resume();\n    }\n  };\n\n  return this;\n};\n\nObject.defineProperty(Readable.prototype, 'readableHighWaterMark', {\n  // making it explicit this property is not enumerable\n  // because otherwise some prototype manipulation in\n  // userland will fail\n  enumerable: false,\n  get: function () {\n    return this._readableState.highWaterMark;\n  }\n});\n\n// exposed for testing purposes only.\nReadable._fromList = fromList;\n\n// Pluck off n bytes from an array of buffers.\n// Length is the combined lengths of all the buffers in the list.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromList(n, state) {\n  // nothing buffered\n  if (state.length === 0) return null;\n\n  var ret;\n  if (state.objectMode) ret = state.buffer.shift();else if (!n || n >= state.length) {\n    // read it all, truncate the list\n    if (state.decoder) ret = state.buffer.join('');else if (state.buffer.length === 1) ret = state.buffer.head.data;else ret = state.buffer.concat(state.length);\n    state.buffer.clear();\n  } else {\n    // read part of list\n    ret = fromListPartial(n, state.buffer, state.decoder);\n  }\n\n  return ret;\n}\n\n// Extracts only enough buffered data to satisfy the amount requested.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction fromListPartial(n, list, hasStrings) {\n  var ret;\n  if (n < list.head.data.length) {\n    // slice is the same for buffers and strings\n    ret = list.head.data.slice(0, n);\n    list.head.data = list.head.data.slice(n);\n  } else if (n === list.head.data.length) {\n    // first chunk is a perfect match\n    ret = list.shift();\n  } else {\n    // result spans more than one buffer\n    ret = hasStrings ? copyFromBufferString(n, list) : copyFromBuffer(n, list);\n  }\n  return ret;\n}\n\n// Copies a specified amount of characters from the list of buffered data\n// chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBufferString(n, list) {\n  var p = list.head;\n  var c = 1;\n  var ret = p.data;\n  n -= ret.length;\n  while (p = p.next) {\n    var str = p.data;\n    var nb = n > str.length ? str.length : n;\n    if (nb === str.length) ret += str;else ret += str.slice(0, n);\n    n -= nb;\n    if (n === 0) {\n      if (nb === str.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = str.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\n// Copies a specified amount of bytes from the list of buffered data chunks.\n// This function is designed to be inlinable, so please take care when making\n// changes to the function body.\nfunction copyFromBuffer(n, list) {\n  var ret = Buffer.allocUnsafe(n);\n  var p = list.head;\n  var c = 1;\n  p.data.copy(ret);\n  n -= p.data.length;\n  while (p = p.next) {\n    var buf = p.data;\n    var nb = n > buf.length ? buf.length : n;\n    buf.copy(ret, ret.length - n, 0, nb);\n    n -= nb;\n    if (n === 0) {\n      if (nb === buf.length) {\n        ++c;\n        if (p.next) list.head = p.next;else list.head = list.tail = null;\n      } else {\n        list.head = p;\n        p.data = buf.slice(nb);\n      }\n      break;\n    }\n    ++c;\n  }\n  list.length -= c;\n  return ret;\n}\n\nfunction endReadable(stream) {\n  var state = stream._readableState;\n\n  // If we get here before consuming all the bytes, then that is a\n  // bug in node.  Should never happen.\n  if (state.length > 0) throw new Error('\"endReadable()\" called on non-empty stream');\n\n  if (!state.endEmitted) {\n    state.ended = true;\n    pna.nextTick(endReadableNT, state, stream);\n  }\n}\n\nfunction endReadableNT(state, stream) {\n  // Check that we didn't get one last unshift.\n  if (!state.endEmitted && state.length === 0) {\n    state.endEmitted = true;\n    stream.readable = false;\n    stream.emit('end');\n  }\n}\n\nfunction indexOf(xs, x) {\n  for (var i = 0, l = xs.length; i < l; i++) {\n    if (xs[i] === x) return i;\n  }\n  return -1;\n}"},"lineCount":1022}},"hash":"73eea96f944cae06210d7c77068a8e5a","cacheData":{"env":{}}}