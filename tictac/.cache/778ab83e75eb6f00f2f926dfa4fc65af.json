{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/create-hash/package.json","includedInParent":true,"mtime":499162500000},{"name":"inherits","loc":{"line":2,"column":23}},{"name":"md5.js","loc":{"line":3,"column":18}},{"name":"ripemd160","loc":{"line":4,"column":24}},{"name":"sha.js","loc":{"line":5,"column":18}},{"name":"cipher-base","loc":{"line":6,"column":19}}],"generated":{"js":"'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n","map":{"mappings":[{"source":"node_modules/create-hash/browser.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/create-hash/browser.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}}],"sources":{"node_modules/create-hash/browser.js":"'use strict'\nvar inherits = require('inherits')\nvar MD5 = require('md5.js')\nvar RIPEMD160 = require('ripemd160')\nvar sha = require('sha.js')\nvar Base = require('cipher-base')\n\nfunction Hash (hash) {\n  Base.call(this, 'digest')\n\n  this._hash = hash\n}\n\ninherits(Hash, Base)\n\nHash.prototype._update = function (data) {\n  this._hash.update(data)\n}\n\nHash.prototype._final = function () {\n  return this._hash.digest()\n}\n\nmodule.exports = function createHash (alg) {\n  alg = alg.toLowerCase()\n  if (alg === 'md5') return new MD5()\n  if (alg === 'rmd160' || alg === 'ripemd160') return new RIPEMD160()\n\n  return new Hash(sha(alg))\n}\n"},"lineCount":31}},"hash":"7ed8a8e50200353f859b20ec7f2ec4af","cacheData":{"env":{}}}