{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/url/package.json","includedInParent":true,"mtime":1440689808000},{"name":"punycode","loc":{"line":24,"column":23}},{"name":"./util","loc":{"line":25,"column":19}},{"name":"querystring","loc":{"line":100,"column":26}}],"generated":{"js":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n","map":{"mappings":[{"source":"node_modules/url/url.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/url/url.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/url/url.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/url/url.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/url/url.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/url/url.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/url/url.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/url/url.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/url/url.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/url/url.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/url/url.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/url/url.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/url/url.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/url/url.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/url/url.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/url/url.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/url/url.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/url/url.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/url/url.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/url/url.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/url/url.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/url/url.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/url/url.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/url/url.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/url/url.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/url/url.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/url/url.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/url/url.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/url/url.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/url/url.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/url/url.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/url/url.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/url/url.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/url/url.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/url/url.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/url/url.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/url/url.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/url/url.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/url/url.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/url/url.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/url/url.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/url/url.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/url/url.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/url/url.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/url/url.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/url/url.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/url/url.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/url/url.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/url/url.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/url/url.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/url/url.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/url/url.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/url/url.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/url/url.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/url/url.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/url/url.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/url/url.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/url/url.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/url/url.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/url/url.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/url/url.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/url/url.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/url/url.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/url/url.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/url/url.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/url/url.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/url/url.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/url/url.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/url/url.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/url/url.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/url/url.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/url/url.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/url/url.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/url/url.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/url/url.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/url/url.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/url/url.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/url/url.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/url/url.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/url/url.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/url/url.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/url/url.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/url/url.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/url/url.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/url/url.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/url/url.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/url/url.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/url/url.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/url/url.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/url/url.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/url/url.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/url/url.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/url/url.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/url/url.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/url/url.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/url/url.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/url/url.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/url/url.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/url/url.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/url/url.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/url/url.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/url/url.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/url/url.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/url/url.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/url/url.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/url/url.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/url/url.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/url/url.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/url/url.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/url/url.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/url/url.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/url/url.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/url/url.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/url/url.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/url/url.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/url/url.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/url/url.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/url/url.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/url/url.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/url/url.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/url/url.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/url/url.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/url/url.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/url/url.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/url/url.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/url/url.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/url/url.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/url/url.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/url/url.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/url/url.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/url/url.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/url/url.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/url/url.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/url/url.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/url/url.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/url/url.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/url/url.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/url/url.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/url/url.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/url/url.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/url/url.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/url/url.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/url/url.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/url/url.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/url/url.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/url/url.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/url/url.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/url/url.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/url/url.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/url/url.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/url/url.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/url/url.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/url/url.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/url/url.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/url/url.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/url/url.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/url/url.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/url/url.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/url/url.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/url/url.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/url/url.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/url/url.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/url/url.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/url/url.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/url/url.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/url/url.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/url/url.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/url/url.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/url/url.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/url/url.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/url/url.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/url/url.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/url/url.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/url/url.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/url/url.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/url/url.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/url/url.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/url/url.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/url/url.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/url/url.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/url/url.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/url/url.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/url/url.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/url/url.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/url/url.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/url/url.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/url/url.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/url/url.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/url/url.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/url/url.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/url/url.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/url/url.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/url/url.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/url/url.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/url/url.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/url/url.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/url/url.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/url/url.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/url/url.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/url/url.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/url/url.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/url/url.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/url/url.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/url/url.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/url/url.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/url/url.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/url/url.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/url/url.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/url/url.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/url/url.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/url/url.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/url/url.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/url/url.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/url/url.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/url/url.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/url/url.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/url/url.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/url/url.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/url/url.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/url/url.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/url/url.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/url/url.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/url/url.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/url/url.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/url/url.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/url/url.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/url/url.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/url/url.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/url/url.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/url/url.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/url/url.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/url/url.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/url/url.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/url/url.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/url/url.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/url/url.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/url/url.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/url/url.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/url/url.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/url/url.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/url/url.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/url/url.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/url/url.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/url/url.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/url/url.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/url/url.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/url/url.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/url/url.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/url/url.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/url/url.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/url/url.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/url/url.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/url/url.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/url/url.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/url/url.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/url/url.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/url/url.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/url/url.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/url/url.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/url/url.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/url/url.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/url/url.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/url/url.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/url/url.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/url/url.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/url/url.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/url/url.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/url/url.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/url/url.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/url/url.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/url/url.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/url/url.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/url/url.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/url/url.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/url/url.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/url/url.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/url/url.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/url/url.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/url/url.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/url/url.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/url/url.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/url/url.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/url/url.js","original":{"line":283,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/url/url.js","original":{"line":284,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/url/url.js","original":{"line":285,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/url/url.js","original":{"line":286,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/url/url.js","original":{"line":287,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/url/url.js","original":{"line":288,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/url/url.js","original":{"line":289,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/url/url.js","original":{"line":290,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/url/url.js","original":{"line":291,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/url/url.js","original":{"line":292,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/url/url.js","original":{"line":293,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/url/url.js","original":{"line":294,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/url/url.js","original":{"line":295,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/url/url.js","original":{"line":296,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/url/url.js","original":{"line":297,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/url/url.js","original":{"line":298,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/url/url.js","original":{"line":299,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/url/url.js","original":{"line":300,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/url/url.js","original":{"line":301,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/url/url.js","original":{"line":302,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/url/url.js","original":{"line":303,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/url/url.js","original":{"line":304,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/url/url.js","original":{"line":305,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/url/url.js","original":{"line":306,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/url/url.js","original":{"line":307,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/url/url.js","original":{"line":308,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/url/url.js","original":{"line":309,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/url/url.js","original":{"line":310,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/url/url.js","original":{"line":311,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/url/url.js","original":{"line":312,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/url/url.js","original":{"line":313,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/url/url.js","original":{"line":314,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/url/url.js","original":{"line":315,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/url/url.js","original":{"line":316,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/url/url.js","original":{"line":317,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/url/url.js","original":{"line":318,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/url/url.js","original":{"line":319,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/url/url.js","original":{"line":320,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/url/url.js","original":{"line":321,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/url/url.js","original":{"line":322,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/url/url.js","original":{"line":323,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/url/url.js","original":{"line":324,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/url/url.js","original":{"line":325,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/url/url.js","original":{"line":326,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/url/url.js","original":{"line":327,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/url/url.js","original":{"line":328,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/url/url.js","original":{"line":329,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/url/url.js","original":{"line":330,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/url/url.js","original":{"line":331,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/url/url.js","original":{"line":332,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/url/url.js","original":{"line":333,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/url/url.js","original":{"line":334,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/url/url.js","original":{"line":335,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/url/url.js","original":{"line":336,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/url/url.js","original":{"line":337,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/url/url.js","original":{"line":338,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/url/url.js","original":{"line":339,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/url/url.js","original":{"line":340,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/url/url.js","original":{"line":341,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/url/url.js","original":{"line":342,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/url/url.js","original":{"line":343,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/url/url.js","original":{"line":344,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/url/url.js","original":{"line":345,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/url/url.js","original":{"line":346,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/url/url.js","original":{"line":347,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/url/url.js","original":{"line":348,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/url/url.js","original":{"line":349,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/url/url.js","original":{"line":350,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/url/url.js","original":{"line":351,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/url/url.js","original":{"line":352,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/url/url.js","original":{"line":353,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/url/url.js","original":{"line":354,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/url/url.js","original":{"line":355,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/url/url.js","original":{"line":356,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/url/url.js","original":{"line":357,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/url/url.js","original":{"line":358,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/url/url.js","original":{"line":359,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/url/url.js","original":{"line":360,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/url/url.js","original":{"line":361,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/url/url.js","original":{"line":362,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/url/url.js","original":{"line":363,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/url/url.js","original":{"line":364,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/url/url.js","original":{"line":365,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/url/url.js","original":{"line":366,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/url/url.js","original":{"line":367,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/url/url.js","original":{"line":368,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/url/url.js","original":{"line":369,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/url/url.js","original":{"line":370,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/url/url.js","original":{"line":371,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/url/url.js","original":{"line":372,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/url/url.js","original":{"line":373,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/url/url.js","original":{"line":374,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/url/url.js","original":{"line":375,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/url/url.js","original":{"line":376,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/url/url.js","original":{"line":377,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/url/url.js","original":{"line":378,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/url/url.js","original":{"line":379,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/url/url.js","original":{"line":380,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/url/url.js","original":{"line":381,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/url/url.js","original":{"line":382,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/url/url.js","original":{"line":383,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/url/url.js","original":{"line":384,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/url/url.js","original":{"line":385,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/url/url.js","original":{"line":386,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/url/url.js","original":{"line":387,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/url/url.js","original":{"line":388,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/url/url.js","original":{"line":389,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/url/url.js","original":{"line":390,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/url/url.js","original":{"line":391,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/url/url.js","original":{"line":392,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/url/url.js","original":{"line":393,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/url/url.js","original":{"line":394,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/url/url.js","original":{"line":395,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/url/url.js","original":{"line":396,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/url/url.js","original":{"line":397,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/url/url.js","original":{"line":398,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/url/url.js","original":{"line":399,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/url/url.js","original":{"line":400,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/url/url.js","original":{"line":401,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/url/url.js","original":{"line":402,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/url/url.js","original":{"line":403,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/url/url.js","original":{"line":404,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/url/url.js","original":{"line":405,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/url/url.js","original":{"line":406,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/url/url.js","original":{"line":407,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/url/url.js","original":{"line":408,"column":0},"generated":{"line":408,"column":0}},{"source":"node_modules/url/url.js","original":{"line":409,"column":0},"generated":{"line":409,"column":0}},{"source":"node_modules/url/url.js","original":{"line":410,"column":0},"generated":{"line":410,"column":0}},{"source":"node_modules/url/url.js","original":{"line":411,"column":0},"generated":{"line":411,"column":0}},{"source":"node_modules/url/url.js","original":{"line":412,"column":0},"generated":{"line":412,"column":0}},{"source":"node_modules/url/url.js","original":{"line":413,"column":0},"generated":{"line":413,"column":0}},{"source":"node_modules/url/url.js","original":{"line":414,"column":0},"generated":{"line":414,"column":0}},{"source":"node_modules/url/url.js","original":{"line":415,"column":0},"generated":{"line":415,"column":0}},{"source":"node_modules/url/url.js","original":{"line":416,"column":0},"generated":{"line":416,"column":0}},{"source":"node_modules/url/url.js","original":{"line":417,"column":0},"generated":{"line":417,"column":0}},{"source":"node_modules/url/url.js","original":{"line":418,"column":0},"generated":{"line":418,"column":0}},{"source":"node_modules/url/url.js","original":{"line":419,"column":0},"generated":{"line":419,"column":0}},{"source":"node_modules/url/url.js","original":{"line":420,"column":0},"generated":{"line":420,"column":0}},{"source":"node_modules/url/url.js","original":{"line":421,"column":0},"generated":{"line":421,"column":0}},{"source":"node_modules/url/url.js","original":{"line":422,"column":0},"generated":{"line":422,"column":0}},{"source":"node_modules/url/url.js","original":{"line":423,"column":0},"generated":{"line":423,"column":0}},{"source":"node_modules/url/url.js","original":{"line":424,"column":0},"generated":{"line":424,"column":0}},{"source":"node_modules/url/url.js","original":{"line":425,"column":0},"generated":{"line":425,"column":0}},{"source":"node_modules/url/url.js","original":{"line":426,"column":0},"generated":{"line":426,"column":0}},{"source":"node_modules/url/url.js","original":{"line":427,"column":0},"generated":{"line":427,"column":0}},{"source":"node_modules/url/url.js","original":{"line":428,"column":0},"generated":{"line":428,"column":0}},{"source":"node_modules/url/url.js","original":{"line":429,"column":0},"generated":{"line":429,"column":0}},{"source":"node_modules/url/url.js","original":{"line":430,"column":0},"generated":{"line":430,"column":0}},{"source":"node_modules/url/url.js","original":{"line":431,"column":0},"generated":{"line":431,"column":0}},{"source":"node_modules/url/url.js","original":{"line":432,"column":0},"generated":{"line":432,"column":0}},{"source":"node_modules/url/url.js","original":{"line":433,"column":0},"generated":{"line":433,"column":0}},{"source":"node_modules/url/url.js","original":{"line":434,"column":0},"generated":{"line":434,"column":0}},{"source":"node_modules/url/url.js","original":{"line":435,"column":0},"generated":{"line":435,"column":0}},{"source":"node_modules/url/url.js","original":{"line":436,"column":0},"generated":{"line":436,"column":0}},{"source":"node_modules/url/url.js","original":{"line":437,"column":0},"generated":{"line":437,"column":0}},{"source":"node_modules/url/url.js","original":{"line":438,"column":0},"generated":{"line":438,"column":0}},{"source":"node_modules/url/url.js","original":{"line":439,"column":0},"generated":{"line":439,"column":0}},{"source":"node_modules/url/url.js","original":{"line":440,"column":0},"generated":{"line":440,"column":0}},{"source":"node_modules/url/url.js","original":{"line":441,"column":0},"generated":{"line":441,"column":0}},{"source":"node_modules/url/url.js","original":{"line":442,"column":0},"generated":{"line":442,"column":0}},{"source":"node_modules/url/url.js","original":{"line":443,"column":0},"generated":{"line":443,"column":0}},{"source":"node_modules/url/url.js","original":{"line":444,"column":0},"generated":{"line":444,"column":0}},{"source":"node_modules/url/url.js","original":{"line":445,"column":0},"generated":{"line":445,"column":0}},{"source":"node_modules/url/url.js","original":{"line":446,"column":0},"generated":{"line":446,"column":0}},{"source":"node_modules/url/url.js","original":{"line":447,"column":0},"generated":{"line":447,"column":0}},{"source":"node_modules/url/url.js","original":{"line":448,"column":0},"generated":{"line":448,"column":0}},{"source":"node_modules/url/url.js","original":{"line":449,"column":0},"generated":{"line":449,"column":0}},{"source":"node_modules/url/url.js","original":{"line":450,"column":0},"generated":{"line":450,"column":0}},{"source":"node_modules/url/url.js","original":{"line":451,"column":0},"generated":{"line":451,"column":0}},{"source":"node_modules/url/url.js","original":{"line":452,"column":0},"generated":{"line":452,"column":0}},{"source":"node_modules/url/url.js","original":{"line":453,"column":0},"generated":{"line":453,"column":0}},{"source":"node_modules/url/url.js","original":{"line":454,"column":0},"generated":{"line":454,"column":0}},{"source":"node_modules/url/url.js","original":{"line":455,"column":0},"generated":{"line":455,"column":0}},{"source":"node_modules/url/url.js","original":{"line":456,"column":0},"generated":{"line":456,"column":0}},{"source":"node_modules/url/url.js","original":{"line":457,"column":0},"generated":{"line":457,"column":0}},{"source":"node_modules/url/url.js","original":{"line":458,"column":0},"generated":{"line":458,"column":0}},{"source":"node_modules/url/url.js","original":{"line":459,"column":0},"generated":{"line":459,"column":0}},{"source":"node_modules/url/url.js","original":{"line":460,"column":0},"generated":{"line":460,"column":0}},{"source":"node_modules/url/url.js","original":{"line":461,"column":0},"generated":{"line":461,"column":0}},{"source":"node_modules/url/url.js","original":{"line":462,"column":0},"generated":{"line":462,"column":0}},{"source":"node_modules/url/url.js","original":{"line":463,"column":0},"generated":{"line":463,"column":0}},{"source":"node_modules/url/url.js","original":{"line":464,"column":0},"generated":{"line":464,"column":0}},{"source":"node_modules/url/url.js","original":{"line":465,"column":0},"generated":{"line":465,"column":0}},{"source":"node_modules/url/url.js","original":{"line":466,"column":0},"generated":{"line":466,"column":0}},{"source":"node_modules/url/url.js","original":{"line":467,"column":0},"generated":{"line":467,"column":0}},{"source":"node_modules/url/url.js","original":{"line":468,"column":0},"generated":{"line":468,"column":0}},{"source":"node_modules/url/url.js","original":{"line":469,"column":0},"generated":{"line":469,"column":0}},{"source":"node_modules/url/url.js","original":{"line":470,"column":0},"generated":{"line":470,"column":0}},{"source":"node_modules/url/url.js","original":{"line":471,"column":0},"generated":{"line":471,"column":0}},{"source":"node_modules/url/url.js","original":{"line":472,"column":0},"generated":{"line":472,"column":0}},{"source":"node_modules/url/url.js","original":{"line":473,"column":0},"generated":{"line":473,"column":0}},{"source":"node_modules/url/url.js","original":{"line":474,"column":0},"generated":{"line":474,"column":0}},{"source":"node_modules/url/url.js","original":{"line":475,"column":0},"generated":{"line":475,"column":0}},{"source":"node_modules/url/url.js","original":{"line":476,"column":0},"generated":{"line":476,"column":0}},{"source":"node_modules/url/url.js","original":{"line":477,"column":0},"generated":{"line":477,"column":0}},{"source":"node_modules/url/url.js","original":{"line":478,"column":0},"generated":{"line":478,"column":0}},{"source":"node_modules/url/url.js","original":{"line":479,"column":0},"generated":{"line":479,"column":0}},{"source":"node_modules/url/url.js","original":{"line":480,"column":0},"generated":{"line":480,"column":0}},{"source":"node_modules/url/url.js","original":{"line":481,"column":0},"generated":{"line":481,"column":0}},{"source":"node_modules/url/url.js","original":{"line":482,"column":0},"generated":{"line":482,"column":0}},{"source":"node_modules/url/url.js","original":{"line":483,"column":0},"generated":{"line":483,"column":0}},{"source":"node_modules/url/url.js","original":{"line":484,"column":0},"generated":{"line":484,"column":0}},{"source":"node_modules/url/url.js","original":{"line":485,"column":0},"generated":{"line":485,"column":0}},{"source":"node_modules/url/url.js","original":{"line":486,"column":0},"generated":{"line":486,"column":0}},{"source":"node_modules/url/url.js","original":{"line":487,"column":0},"generated":{"line":487,"column":0}},{"source":"node_modules/url/url.js","original":{"line":488,"column":0},"generated":{"line":488,"column":0}},{"source":"node_modules/url/url.js","original":{"line":489,"column":0},"generated":{"line":489,"column":0}},{"source":"node_modules/url/url.js","original":{"line":490,"column":0},"generated":{"line":490,"column":0}},{"source":"node_modules/url/url.js","original":{"line":491,"column":0},"generated":{"line":491,"column":0}},{"source":"node_modules/url/url.js","original":{"line":492,"column":0},"generated":{"line":492,"column":0}},{"source":"node_modules/url/url.js","original":{"line":493,"column":0},"generated":{"line":493,"column":0}},{"source":"node_modules/url/url.js","original":{"line":494,"column":0},"generated":{"line":494,"column":0}},{"source":"node_modules/url/url.js","original":{"line":495,"column":0},"generated":{"line":495,"column":0}},{"source":"node_modules/url/url.js","original":{"line":496,"column":0},"generated":{"line":496,"column":0}},{"source":"node_modules/url/url.js","original":{"line":497,"column":0},"generated":{"line":497,"column":0}},{"source":"node_modules/url/url.js","original":{"line":498,"column":0},"generated":{"line":498,"column":0}},{"source":"node_modules/url/url.js","original":{"line":499,"column":0},"generated":{"line":499,"column":0}},{"source":"node_modules/url/url.js","original":{"line":500,"column":0},"generated":{"line":500,"column":0}},{"source":"node_modules/url/url.js","original":{"line":501,"column":0},"generated":{"line":501,"column":0}},{"source":"node_modules/url/url.js","original":{"line":502,"column":0},"generated":{"line":502,"column":0}},{"source":"node_modules/url/url.js","original":{"line":503,"column":0},"generated":{"line":503,"column":0}},{"source":"node_modules/url/url.js","original":{"line":504,"column":0},"generated":{"line":504,"column":0}},{"source":"node_modules/url/url.js","original":{"line":505,"column":0},"generated":{"line":505,"column":0}},{"source":"node_modules/url/url.js","original":{"line":506,"column":0},"generated":{"line":506,"column":0}},{"source":"node_modules/url/url.js","original":{"line":507,"column":0},"generated":{"line":507,"column":0}},{"source":"node_modules/url/url.js","original":{"line":508,"column":0},"generated":{"line":508,"column":0}},{"source":"node_modules/url/url.js","original":{"line":509,"column":0},"generated":{"line":509,"column":0}},{"source":"node_modules/url/url.js","original":{"line":510,"column":0},"generated":{"line":510,"column":0}},{"source":"node_modules/url/url.js","original":{"line":511,"column":0},"generated":{"line":511,"column":0}},{"source":"node_modules/url/url.js","original":{"line":512,"column":0},"generated":{"line":512,"column":0}},{"source":"node_modules/url/url.js","original":{"line":513,"column":0},"generated":{"line":513,"column":0}},{"source":"node_modules/url/url.js","original":{"line":514,"column":0},"generated":{"line":514,"column":0}},{"source":"node_modules/url/url.js","original":{"line":515,"column":0},"generated":{"line":515,"column":0}},{"source":"node_modules/url/url.js","original":{"line":516,"column":0},"generated":{"line":516,"column":0}},{"source":"node_modules/url/url.js","original":{"line":517,"column":0},"generated":{"line":517,"column":0}},{"source":"node_modules/url/url.js","original":{"line":518,"column":0},"generated":{"line":518,"column":0}},{"source":"node_modules/url/url.js","original":{"line":519,"column":0},"generated":{"line":519,"column":0}},{"source":"node_modules/url/url.js","original":{"line":520,"column":0},"generated":{"line":520,"column":0}},{"source":"node_modules/url/url.js","original":{"line":521,"column":0},"generated":{"line":521,"column":0}},{"source":"node_modules/url/url.js","original":{"line":522,"column":0},"generated":{"line":522,"column":0}},{"source":"node_modules/url/url.js","original":{"line":523,"column":0},"generated":{"line":523,"column":0}},{"source":"node_modules/url/url.js","original":{"line":524,"column":0},"generated":{"line":524,"column":0}},{"source":"node_modules/url/url.js","original":{"line":525,"column":0},"generated":{"line":525,"column":0}},{"source":"node_modules/url/url.js","original":{"line":526,"column":0},"generated":{"line":526,"column":0}},{"source":"node_modules/url/url.js","original":{"line":527,"column":0},"generated":{"line":527,"column":0}},{"source":"node_modules/url/url.js","original":{"line":528,"column":0},"generated":{"line":528,"column":0}},{"source":"node_modules/url/url.js","original":{"line":529,"column":0},"generated":{"line":529,"column":0}},{"source":"node_modules/url/url.js","original":{"line":530,"column":0},"generated":{"line":530,"column":0}},{"source":"node_modules/url/url.js","original":{"line":531,"column":0},"generated":{"line":531,"column":0}},{"source":"node_modules/url/url.js","original":{"line":532,"column":0},"generated":{"line":532,"column":0}},{"source":"node_modules/url/url.js","original":{"line":533,"column":0},"generated":{"line":533,"column":0}},{"source":"node_modules/url/url.js","original":{"line":534,"column":0},"generated":{"line":534,"column":0}},{"source":"node_modules/url/url.js","original":{"line":535,"column":0},"generated":{"line":535,"column":0}},{"source":"node_modules/url/url.js","original":{"line":536,"column":0},"generated":{"line":536,"column":0}},{"source":"node_modules/url/url.js","original":{"line":537,"column":0},"generated":{"line":537,"column":0}},{"source":"node_modules/url/url.js","original":{"line":538,"column":0},"generated":{"line":538,"column":0}},{"source":"node_modules/url/url.js","original":{"line":539,"column":0},"generated":{"line":539,"column":0}},{"source":"node_modules/url/url.js","original":{"line":540,"column":0},"generated":{"line":540,"column":0}},{"source":"node_modules/url/url.js","original":{"line":541,"column":0},"generated":{"line":541,"column":0}},{"source":"node_modules/url/url.js","original":{"line":542,"column":0},"generated":{"line":542,"column":0}},{"source":"node_modules/url/url.js","original":{"line":543,"column":0},"generated":{"line":543,"column":0}},{"source":"node_modules/url/url.js","original":{"line":544,"column":0},"generated":{"line":544,"column":0}},{"source":"node_modules/url/url.js","original":{"line":545,"column":0},"generated":{"line":545,"column":0}},{"source":"node_modules/url/url.js","original":{"line":546,"column":0},"generated":{"line":546,"column":0}},{"source":"node_modules/url/url.js","original":{"line":547,"column":0},"generated":{"line":547,"column":0}},{"source":"node_modules/url/url.js","original":{"line":548,"column":0},"generated":{"line":548,"column":0}},{"source":"node_modules/url/url.js","original":{"line":549,"column":0},"generated":{"line":549,"column":0}},{"source":"node_modules/url/url.js","original":{"line":550,"column":0},"generated":{"line":550,"column":0}},{"source":"node_modules/url/url.js","original":{"line":551,"column":0},"generated":{"line":551,"column":0}},{"source":"node_modules/url/url.js","original":{"line":552,"column":0},"generated":{"line":552,"column":0}},{"source":"node_modules/url/url.js","original":{"line":553,"column":0},"generated":{"line":553,"column":0}},{"source":"node_modules/url/url.js","original":{"line":554,"column":0},"generated":{"line":554,"column":0}},{"source":"node_modules/url/url.js","original":{"line":555,"column":0},"generated":{"line":555,"column":0}},{"source":"node_modules/url/url.js","original":{"line":556,"column":0},"generated":{"line":556,"column":0}},{"source":"node_modules/url/url.js","original":{"line":557,"column":0},"generated":{"line":557,"column":0}},{"source":"node_modules/url/url.js","original":{"line":558,"column":0},"generated":{"line":558,"column":0}},{"source":"node_modules/url/url.js","original":{"line":559,"column":0},"generated":{"line":559,"column":0}},{"source":"node_modules/url/url.js","original":{"line":560,"column":0},"generated":{"line":560,"column":0}},{"source":"node_modules/url/url.js","original":{"line":561,"column":0},"generated":{"line":561,"column":0}},{"source":"node_modules/url/url.js","original":{"line":562,"column":0},"generated":{"line":562,"column":0}},{"source":"node_modules/url/url.js","original":{"line":563,"column":0},"generated":{"line":563,"column":0}},{"source":"node_modules/url/url.js","original":{"line":564,"column":0},"generated":{"line":564,"column":0}},{"source":"node_modules/url/url.js","original":{"line":565,"column":0},"generated":{"line":565,"column":0}},{"source":"node_modules/url/url.js","original":{"line":566,"column":0},"generated":{"line":566,"column":0}},{"source":"node_modules/url/url.js","original":{"line":567,"column":0},"generated":{"line":567,"column":0}},{"source":"node_modules/url/url.js","original":{"line":568,"column":0},"generated":{"line":568,"column":0}},{"source":"node_modules/url/url.js","original":{"line":569,"column":0},"generated":{"line":569,"column":0}},{"source":"node_modules/url/url.js","original":{"line":570,"column":0},"generated":{"line":570,"column":0}},{"source":"node_modules/url/url.js","original":{"line":571,"column":0},"generated":{"line":571,"column":0}},{"source":"node_modules/url/url.js","original":{"line":572,"column":0},"generated":{"line":572,"column":0}},{"source":"node_modules/url/url.js","original":{"line":573,"column":0},"generated":{"line":573,"column":0}},{"source":"node_modules/url/url.js","original":{"line":574,"column":0},"generated":{"line":574,"column":0}},{"source":"node_modules/url/url.js","original":{"line":575,"column":0},"generated":{"line":575,"column":0}},{"source":"node_modules/url/url.js","original":{"line":576,"column":0},"generated":{"line":576,"column":0}},{"source":"node_modules/url/url.js","original":{"line":577,"column":0},"generated":{"line":577,"column":0}},{"source":"node_modules/url/url.js","original":{"line":578,"column":0},"generated":{"line":578,"column":0}},{"source":"node_modules/url/url.js","original":{"line":579,"column":0},"generated":{"line":579,"column":0}},{"source":"node_modules/url/url.js","original":{"line":580,"column":0},"generated":{"line":580,"column":0}},{"source":"node_modules/url/url.js","original":{"line":581,"column":0},"generated":{"line":581,"column":0}},{"source":"node_modules/url/url.js","original":{"line":582,"column":0},"generated":{"line":582,"column":0}},{"source":"node_modules/url/url.js","original":{"line":583,"column":0},"generated":{"line":583,"column":0}},{"source":"node_modules/url/url.js","original":{"line":584,"column":0},"generated":{"line":584,"column":0}},{"source":"node_modules/url/url.js","original":{"line":585,"column":0},"generated":{"line":585,"column":0}},{"source":"node_modules/url/url.js","original":{"line":586,"column":0},"generated":{"line":586,"column":0}},{"source":"node_modules/url/url.js","original":{"line":587,"column":0},"generated":{"line":587,"column":0}},{"source":"node_modules/url/url.js","original":{"line":588,"column":0},"generated":{"line":588,"column":0}},{"source":"node_modules/url/url.js","original":{"line":589,"column":0},"generated":{"line":589,"column":0}},{"source":"node_modules/url/url.js","original":{"line":590,"column":0},"generated":{"line":590,"column":0}},{"source":"node_modules/url/url.js","original":{"line":591,"column":0},"generated":{"line":591,"column":0}},{"source":"node_modules/url/url.js","original":{"line":592,"column":0},"generated":{"line":592,"column":0}},{"source":"node_modules/url/url.js","original":{"line":593,"column":0},"generated":{"line":593,"column":0}},{"source":"node_modules/url/url.js","original":{"line":594,"column":0},"generated":{"line":594,"column":0}},{"source":"node_modules/url/url.js","original":{"line":595,"column":0},"generated":{"line":595,"column":0}},{"source":"node_modules/url/url.js","original":{"line":596,"column":0},"generated":{"line":596,"column":0}},{"source":"node_modules/url/url.js","original":{"line":597,"column":0},"generated":{"line":597,"column":0}},{"source":"node_modules/url/url.js","original":{"line":598,"column":0},"generated":{"line":598,"column":0}},{"source":"node_modules/url/url.js","original":{"line":599,"column":0},"generated":{"line":599,"column":0}},{"source":"node_modules/url/url.js","original":{"line":600,"column":0},"generated":{"line":600,"column":0}},{"source":"node_modules/url/url.js","original":{"line":601,"column":0},"generated":{"line":601,"column":0}},{"source":"node_modules/url/url.js","original":{"line":602,"column":0},"generated":{"line":602,"column":0}},{"source":"node_modules/url/url.js","original":{"line":603,"column":0},"generated":{"line":603,"column":0}},{"source":"node_modules/url/url.js","original":{"line":604,"column":0},"generated":{"line":604,"column":0}},{"source":"node_modules/url/url.js","original":{"line":605,"column":0},"generated":{"line":605,"column":0}},{"source":"node_modules/url/url.js","original":{"line":606,"column":0},"generated":{"line":606,"column":0}},{"source":"node_modules/url/url.js","original":{"line":607,"column":0},"generated":{"line":607,"column":0}},{"source":"node_modules/url/url.js","original":{"line":608,"column":0},"generated":{"line":608,"column":0}},{"source":"node_modules/url/url.js","original":{"line":609,"column":0},"generated":{"line":609,"column":0}},{"source":"node_modules/url/url.js","original":{"line":610,"column":0},"generated":{"line":610,"column":0}},{"source":"node_modules/url/url.js","original":{"line":611,"column":0},"generated":{"line":611,"column":0}},{"source":"node_modules/url/url.js","original":{"line":612,"column":0},"generated":{"line":612,"column":0}},{"source":"node_modules/url/url.js","original":{"line":613,"column":0},"generated":{"line":613,"column":0}},{"source":"node_modules/url/url.js","original":{"line":614,"column":0},"generated":{"line":614,"column":0}},{"source":"node_modules/url/url.js","original":{"line":615,"column":0},"generated":{"line":615,"column":0}},{"source":"node_modules/url/url.js","original":{"line":616,"column":0},"generated":{"line":616,"column":0}},{"source":"node_modules/url/url.js","original":{"line":617,"column":0},"generated":{"line":617,"column":0}},{"source":"node_modules/url/url.js","original":{"line":618,"column":0},"generated":{"line":618,"column":0}},{"source":"node_modules/url/url.js","original":{"line":619,"column":0},"generated":{"line":619,"column":0}},{"source":"node_modules/url/url.js","original":{"line":620,"column":0},"generated":{"line":620,"column":0}},{"source":"node_modules/url/url.js","original":{"line":621,"column":0},"generated":{"line":621,"column":0}},{"source":"node_modules/url/url.js","original":{"line":622,"column":0},"generated":{"line":622,"column":0}},{"source":"node_modules/url/url.js","original":{"line":623,"column":0},"generated":{"line":623,"column":0}},{"source":"node_modules/url/url.js","original":{"line":624,"column":0},"generated":{"line":624,"column":0}},{"source":"node_modules/url/url.js","original":{"line":625,"column":0},"generated":{"line":625,"column":0}},{"source":"node_modules/url/url.js","original":{"line":626,"column":0},"generated":{"line":626,"column":0}},{"source":"node_modules/url/url.js","original":{"line":627,"column":0},"generated":{"line":627,"column":0}},{"source":"node_modules/url/url.js","original":{"line":628,"column":0},"generated":{"line":628,"column":0}},{"source":"node_modules/url/url.js","original":{"line":629,"column":0},"generated":{"line":629,"column":0}},{"source":"node_modules/url/url.js","original":{"line":630,"column":0},"generated":{"line":630,"column":0}},{"source":"node_modules/url/url.js","original":{"line":631,"column":0},"generated":{"line":631,"column":0}},{"source":"node_modules/url/url.js","original":{"line":632,"column":0},"generated":{"line":632,"column":0}},{"source":"node_modules/url/url.js","original":{"line":633,"column":0},"generated":{"line":633,"column":0}},{"source":"node_modules/url/url.js","original":{"line":634,"column":0},"generated":{"line":634,"column":0}},{"source":"node_modules/url/url.js","original":{"line":635,"column":0},"generated":{"line":635,"column":0}},{"source":"node_modules/url/url.js","original":{"line":636,"column":0},"generated":{"line":636,"column":0}},{"source":"node_modules/url/url.js","original":{"line":637,"column":0},"generated":{"line":637,"column":0}},{"source":"node_modules/url/url.js","original":{"line":638,"column":0},"generated":{"line":638,"column":0}},{"source":"node_modules/url/url.js","original":{"line":639,"column":0},"generated":{"line":639,"column":0}},{"source":"node_modules/url/url.js","original":{"line":640,"column":0},"generated":{"line":640,"column":0}},{"source":"node_modules/url/url.js","original":{"line":641,"column":0},"generated":{"line":641,"column":0}},{"source":"node_modules/url/url.js","original":{"line":642,"column":0},"generated":{"line":642,"column":0}},{"source":"node_modules/url/url.js","original":{"line":643,"column":0},"generated":{"line":643,"column":0}},{"source":"node_modules/url/url.js","original":{"line":644,"column":0},"generated":{"line":644,"column":0}},{"source":"node_modules/url/url.js","original":{"line":645,"column":0},"generated":{"line":645,"column":0}},{"source":"node_modules/url/url.js","original":{"line":646,"column":0},"generated":{"line":646,"column":0}},{"source":"node_modules/url/url.js","original":{"line":647,"column":0},"generated":{"line":647,"column":0}},{"source":"node_modules/url/url.js","original":{"line":648,"column":0},"generated":{"line":648,"column":0}},{"source":"node_modules/url/url.js","original":{"line":649,"column":0},"generated":{"line":649,"column":0}},{"source":"node_modules/url/url.js","original":{"line":650,"column":0},"generated":{"line":650,"column":0}},{"source":"node_modules/url/url.js","original":{"line":651,"column":0},"generated":{"line":651,"column":0}},{"source":"node_modules/url/url.js","original":{"line":652,"column":0},"generated":{"line":652,"column":0}},{"source":"node_modules/url/url.js","original":{"line":653,"column":0},"generated":{"line":653,"column":0}},{"source":"node_modules/url/url.js","original":{"line":654,"column":0},"generated":{"line":654,"column":0}},{"source":"node_modules/url/url.js","original":{"line":655,"column":0},"generated":{"line":655,"column":0}},{"source":"node_modules/url/url.js","original":{"line":656,"column":0},"generated":{"line":656,"column":0}},{"source":"node_modules/url/url.js","original":{"line":657,"column":0},"generated":{"line":657,"column":0}},{"source":"node_modules/url/url.js","original":{"line":658,"column":0},"generated":{"line":658,"column":0}},{"source":"node_modules/url/url.js","original":{"line":659,"column":0},"generated":{"line":659,"column":0}},{"source":"node_modules/url/url.js","original":{"line":660,"column":0},"generated":{"line":660,"column":0}},{"source":"node_modules/url/url.js","original":{"line":661,"column":0},"generated":{"line":661,"column":0}},{"source":"node_modules/url/url.js","original":{"line":662,"column":0},"generated":{"line":662,"column":0}},{"source":"node_modules/url/url.js","original":{"line":663,"column":0},"generated":{"line":663,"column":0}},{"source":"node_modules/url/url.js","original":{"line":664,"column":0},"generated":{"line":664,"column":0}},{"source":"node_modules/url/url.js","original":{"line":665,"column":0},"generated":{"line":665,"column":0}},{"source":"node_modules/url/url.js","original":{"line":666,"column":0},"generated":{"line":666,"column":0}},{"source":"node_modules/url/url.js","original":{"line":667,"column":0},"generated":{"line":667,"column":0}},{"source":"node_modules/url/url.js","original":{"line":668,"column":0},"generated":{"line":668,"column":0}},{"source":"node_modules/url/url.js","original":{"line":669,"column":0},"generated":{"line":669,"column":0}},{"source":"node_modules/url/url.js","original":{"line":670,"column":0},"generated":{"line":670,"column":0}},{"source":"node_modules/url/url.js","original":{"line":671,"column":0},"generated":{"line":671,"column":0}},{"source":"node_modules/url/url.js","original":{"line":672,"column":0},"generated":{"line":672,"column":0}},{"source":"node_modules/url/url.js","original":{"line":673,"column":0},"generated":{"line":673,"column":0}},{"source":"node_modules/url/url.js","original":{"line":674,"column":0},"generated":{"line":674,"column":0}},{"source":"node_modules/url/url.js","original":{"line":675,"column":0},"generated":{"line":675,"column":0}},{"source":"node_modules/url/url.js","original":{"line":676,"column":0},"generated":{"line":676,"column":0}},{"source":"node_modules/url/url.js","original":{"line":677,"column":0},"generated":{"line":677,"column":0}},{"source":"node_modules/url/url.js","original":{"line":678,"column":0},"generated":{"line":678,"column":0}},{"source":"node_modules/url/url.js","original":{"line":679,"column":0},"generated":{"line":679,"column":0}},{"source":"node_modules/url/url.js","original":{"line":680,"column":0},"generated":{"line":680,"column":0}},{"source":"node_modules/url/url.js","original":{"line":681,"column":0},"generated":{"line":681,"column":0}},{"source":"node_modules/url/url.js","original":{"line":682,"column":0},"generated":{"line":682,"column":0}},{"source":"node_modules/url/url.js","original":{"line":683,"column":0},"generated":{"line":683,"column":0}},{"source":"node_modules/url/url.js","original":{"line":684,"column":0},"generated":{"line":684,"column":0}},{"source":"node_modules/url/url.js","original":{"line":685,"column":0},"generated":{"line":685,"column":0}},{"source":"node_modules/url/url.js","original":{"line":686,"column":0},"generated":{"line":686,"column":0}},{"source":"node_modules/url/url.js","original":{"line":687,"column":0},"generated":{"line":687,"column":0}},{"source":"node_modules/url/url.js","original":{"line":688,"column":0},"generated":{"line":688,"column":0}},{"source":"node_modules/url/url.js","original":{"line":689,"column":0},"generated":{"line":689,"column":0}},{"source":"node_modules/url/url.js","original":{"line":690,"column":0},"generated":{"line":690,"column":0}},{"source":"node_modules/url/url.js","original":{"line":691,"column":0},"generated":{"line":691,"column":0}},{"source":"node_modules/url/url.js","original":{"line":692,"column":0},"generated":{"line":692,"column":0}},{"source":"node_modules/url/url.js","original":{"line":693,"column":0},"generated":{"line":693,"column":0}},{"source":"node_modules/url/url.js","original":{"line":694,"column":0},"generated":{"line":694,"column":0}},{"source":"node_modules/url/url.js","original":{"line":695,"column":0},"generated":{"line":695,"column":0}},{"source":"node_modules/url/url.js","original":{"line":696,"column":0},"generated":{"line":696,"column":0}},{"source":"node_modules/url/url.js","original":{"line":697,"column":0},"generated":{"line":697,"column":0}},{"source":"node_modules/url/url.js","original":{"line":698,"column":0},"generated":{"line":698,"column":0}},{"source":"node_modules/url/url.js","original":{"line":699,"column":0},"generated":{"line":699,"column":0}},{"source":"node_modules/url/url.js","original":{"line":700,"column":0},"generated":{"line":700,"column":0}},{"source":"node_modules/url/url.js","original":{"line":701,"column":0},"generated":{"line":701,"column":0}},{"source":"node_modules/url/url.js","original":{"line":702,"column":0},"generated":{"line":702,"column":0}},{"source":"node_modules/url/url.js","original":{"line":703,"column":0},"generated":{"line":703,"column":0}},{"source":"node_modules/url/url.js","original":{"line":704,"column":0},"generated":{"line":704,"column":0}},{"source":"node_modules/url/url.js","original":{"line":705,"column":0},"generated":{"line":705,"column":0}},{"source":"node_modules/url/url.js","original":{"line":706,"column":0},"generated":{"line":706,"column":0}},{"source":"node_modules/url/url.js","original":{"line":707,"column":0},"generated":{"line":707,"column":0}},{"source":"node_modules/url/url.js","original":{"line":708,"column":0},"generated":{"line":708,"column":0}},{"source":"node_modules/url/url.js","original":{"line":709,"column":0},"generated":{"line":709,"column":0}},{"source":"node_modules/url/url.js","original":{"line":710,"column":0},"generated":{"line":710,"column":0}},{"source":"node_modules/url/url.js","original":{"line":711,"column":0},"generated":{"line":711,"column":0}},{"source":"node_modules/url/url.js","original":{"line":712,"column":0},"generated":{"line":712,"column":0}},{"source":"node_modules/url/url.js","original":{"line":713,"column":0},"generated":{"line":713,"column":0}},{"source":"node_modules/url/url.js","original":{"line":714,"column":0},"generated":{"line":714,"column":0}},{"source":"node_modules/url/url.js","original":{"line":715,"column":0},"generated":{"line":715,"column":0}},{"source":"node_modules/url/url.js","original":{"line":716,"column":0},"generated":{"line":716,"column":0}},{"source":"node_modules/url/url.js","original":{"line":717,"column":0},"generated":{"line":717,"column":0}},{"source":"node_modules/url/url.js","original":{"line":718,"column":0},"generated":{"line":718,"column":0}},{"source":"node_modules/url/url.js","original":{"line":719,"column":0},"generated":{"line":719,"column":0}},{"source":"node_modules/url/url.js","original":{"line":720,"column":0},"generated":{"line":720,"column":0}},{"source":"node_modules/url/url.js","original":{"line":721,"column":0},"generated":{"line":721,"column":0}},{"source":"node_modules/url/url.js","original":{"line":722,"column":0},"generated":{"line":722,"column":0}},{"source":"node_modules/url/url.js","original":{"line":723,"column":0},"generated":{"line":723,"column":0}},{"source":"node_modules/url/url.js","original":{"line":724,"column":0},"generated":{"line":724,"column":0}},{"source":"node_modules/url/url.js","original":{"line":725,"column":0},"generated":{"line":725,"column":0}},{"source":"node_modules/url/url.js","original":{"line":726,"column":0},"generated":{"line":726,"column":0}},{"source":"node_modules/url/url.js","original":{"line":727,"column":0},"generated":{"line":727,"column":0}},{"source":"node_modules/url/url.js","original":{"line":728,"column":0},"generated":{"line":728,"column":0}},{"source":"node_modules/url/url.js","original":{"line":729,"column":0},"generated":{"line":729,"column":0}},{"source":"node_modules/url/url.js","original":{"line":730,"column":0},"generated":{"line":730,"column":0}},{"source":"node_modules/url/url.js","original":{"line":731,"column":0},"generated":{"line":731,"column":0}},{"source":"node_modules/url/url.js","original":{"line":732,"column":0},"generated":{"line":732,"column":0}},{"source":"node_modules/url/url.js","original":{"line":733,"column":0},"generated":{"line":733,"column":0}}],"sources":{"node_modules/url/url.js":"// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n'use strict';\n\nvar punycode = require('punycode');\nvar util = require('./util');\n\nexports.parse = urlParse;\nexports.resolve = urlResolve;\nexports.resolveObject = urlResolveObject;\nexports.format = urlFormat;\n\nexports.Url = Url;\n\nfunction Url() {\n  this.protocol = null;\n  this.slashes = null;\n  this.auth = null;\n  this.host = null;\n  this.port = null;\n  this.hostname = null;\n  this.hash = null;\n  this.search = null;\n  this.query = null;\n  this.pathname = null;\n  this.path = null;\n  this.href = null;\n}\n\n// Reference: RFC 3986, RFC 1808, RFC 2396\n\n// define these here so at least they only have to be\n// compiled once on the first module load.\nvar protocolPattern = /^([a-z0-9.+-]+:)/i,\n    portPattern = /:[0-9]*$/,\n\n    // Special case for a simple path URL\n    simplePathPattern = /^(\\/\\/?(?!\\/)[^\\?\\s]*)(\\?[^\\s]*)?$/,\n\n    // RFC 2396: characters reserved for delimiting URLs.\n    // We actually just auto-escape these.\n    delims = ['<', '>', '\"', '`', ' ', '\\r', '\\n', '\\t'],\n\n    // RFC 2396: characters not allowed for various reasons.\n    unwise = ['{', '}', '|', '\\\\', '^', '`'].concat(delims),\n\n    // Allowed by RFCs, but cause of XSS attacks.  Always escape these.\n    autoEscape = ['\\''].concat(unwise),\n    // Characters that are never ever allowed in a hostname.\n    // Note that any invalid chars are also handled, but these\n    // are the ones that are *expected* to be seen, so we fast-path\n    // them.\n    nonHostChars = ['%', '/', '?', ';', '#'].concat(autoEscape),\n    hostEndingChars = ['/', '?', '#'],\n    hostnameMaxLen = 255,\n    hostnamePartPattern = /^[+a-z0-9A-Z_-]{0,63}$/,\n    hostnamePartStart = /^([+a-z0-9A-Z_-]{0,63})(.*)$/,\n    // protocols that can allow \"unsafe\" and \"unwise\" chars.\n    unsafeProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that never have a hostname.\n    hostlessProtocol = {\n      'javascript': true,\n      'javascript:': true\n    },\n    // protocols that always contain a // bit.\n    slashedProtocol = {\n      'http': true,\n      'https': true,\n      'ftp': true,\n      'gopher': true,\n      'file': true,\n      'http:': true,\n      'https:': true,\n      'ftp:': true,\n      'gopher:': true,\n      'file:': true\n    },\n    querystring = require('querystring');\n\nfunction urlParse(url, parseQueryString, slashesDenoteHost) {\n  if (url && util.isObject(url) && url instanceof Url) return url;\n\n  var u = new Url;\n  u.parse(url, parseQueryString, slashesDenoteHost);\n  return u;\n}\n\nUrl.prototype.parse = function(url, parseQueryString, slashesDenoteHost) {\n  if (!util.isString(url)) {\n    throw new TypeError(\"Parameter 'url' must be a string, not \" + typeof url);\n  }\n\n  // Copy chrome, IE, opera backslash-handling behavior.\n  // Back slashes before the query string get converted to forward slashes\n  // See: https://code.google.com/p/chromium/issues/detail?id=25916\n  var queryIndex = url.indexOf('?'),\n      splitter =\n          (queryIndex !== -1 && queryIndex < url.indexOf('#')) ? '?' : '#',\n      uSplit = url.split(splitter),\n      slashRegex = /\\\\/g;\n  uSplit[0] = uSplit[0].replace(slashRegex, '/');\n  url = uSplit.join(splitter);\n\n  var rest = url;\n\n  // trim before proceeding.\n  // This is to support parse stuff like \"  http://foo.com  \\n\"\n  rest = rest.trim();\n\n  if (!slashesDenoteHost && url.split('#').length === 1) {\n    // Try fast path regexp\n    var simplePath = simplePathPattern.exec(rest);\n    if (simplePath) {\n      this.path = rest;\n      this.href = rest;\n      this.pathname = simplePath[1];\n      if (simplePath[2]) {\n        this.search = simplePath[2];\n        if (parseQueryString) {\n          this.query = querystring.parse(this.search.substr(1));\n        } else {\n          this.query = this.search.substr(1);\n        }\n      } else if (parseQueryString) {\n        this.search = '';\n        this.query = {};\n      }\n      return this;\n    }\n  }\n\n  var proto = protocolPattern.exec(rest);\n  if (proto) {\n    proto = proto[0];\n    var lowerProto = proto.toLowerCase();\n    this.protocol = lowerProto;\n    rest = rest.substr(proto.length);\n  }\n\n  // figure out if it's got a host\n  // user@server is *always* interpreted as a hostname, and url\n  // resolution will treat //foo/bar as host=foo,path=bar because that's\n  // how the browser resolves relative URLs.\n  if (slashesDenoteHost || proto || rest.match(/^\\/\\/[^@\\/]+@[^@\\/]+/)) {\n    var slashes = rest.substr(0, 2) === '//';\n    if (slashes && !(proto && hostlessProtocol[proto])) {\n      rest = rest.substr(2);\n      this.slashes = true;\n    }\n  }\n\n  if (!hostlessProtocol[proto] &&\n      (slashes || (proto && !slashedProtocol[proto]))) {\n\n    // there's a hostname.\n    // the first instance of /, ?, ;, or # ends the host.\n    //\n    // If there is an @ in the hostname, then non-host chars *are* allowed\n    // to the left of the last @ sign, unless some host-ending character\n    // comes *before* the @-sign.\n    // URLs are obnoxious.\n    //\n    // ex:\n    // http://a@b@c/ => user:a@b host:c\n    // http://a@b?@c => user:a host:c path:/?@c\n\n    // v0.12 TODO(isaacs): This is not quite how Chrome does things.\n    // Review our test case against browsers more comprehensively.\n\n    // find the first instance of any hostEndingChars\n    var hostEnd = -1;\n    for (var i = 0; i < hostEndingChars.length; i++) {\n      var hec = rest.indexOf(hostEndingChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n\n    // at this point, either we have an explicit point where the\n    // auth portion cannot go past, or the last @ char is the decider.\n    var auth, atSign;\n    if (hostEnd === -1) {\n      // atSign can be anywhere.\n      atSign = rest.lastIndexOf('@');\n    } else {\n      // atSign must be in auth portion.\n      // http://a@b/c@d => host:b auth:a path:/c@d\n      atSign = rest.lastIndexOf('@', hostEnd);\n    }\n\n    // Now we have a portion which is definitely the auth.\n    // Pull that off.\n    if (atSign !== -1) {\n      auth = rest.slice(0, atSign);\n      rest = rest.slice(atSign + 1);\n      this.auth = decodeURIComponent(auth);\n    }\n\n    // the host is the remaining to the left of the first non-host char\n    hostEnd = -1;\n    for (var i = 0; i < nonHostChars.length; i++) {\n      var hec = rest.indexOf(nonHostChars[i]);\n      if (hec !== -1 && (hostEnd === -1 || hec < hostEnd))\n        hostEnd = hec;\n    }\n    // if we still have not hit it, then the entire thing is a host.\n    if (hostEnd === -1)\n      hostEnd = rest.length;\n\n    this.host = rest.slice(0, hostEnd);\n    rest = rest.slice(hostEnd);\n\n    // pull out port.\n    this.parseHost();\n\n    // we've indicated that there is a hostname,\n    // so even if it's empty, it has to be present.\n    this.hostname = this.hostname || '';\n\n    // if hostname begins with [ and ends with ]\n    // assume that it's an IPv6 address.\n    var ipv6Hostname = this.hostname[0] === '[' &&\n        this.hostname[this.hostname.length - 1] === ']';\n\n    // validate a little.\n    if (!ipv6Hostname) {\n      var hostparts = this.hostname.split(/\\./);\n      for (var i = 0, l = hostparts.length; i < l; i++) {\n        var part = hostparts[i];\n        if (!part) continue;\n        if (!part.match(hostnamePartPattern)) {\n          var newpart = '';\n          for (var j = 0, k = part.length; j < k; j++) {\n            if (part.charCodeAt(j) > 127) {\n              // we replace non-ASCII char with a temporary placeholder\n              // we need this to make sure size of hostname is not\n              // broken by replacing non-ASCII by nothing\n              newpart += 'x';\n            } else {\n              newpart += part[j];\n            }\n          }\n          // we test again with ASCII char only\n          if (!newpart.match(hostnamePartPattern)) {\n            var validParts = hostparts.slice(0, i);\n            var notHost = hostparts.slice(i + 1);\n            var bit = part.match(hostnamePartStart);\n            if (bit) {\n              validParts.push(bit[1]);\n              notHost.unshift(bit[2]);\n            }\n            if (notHost.length) {\n              rest = '/' + notHost.join('.') + rest;\n            }\n            this.hostname = validParts.join('.');\n            break;\n          }\n        }\n      }\n    }\n\n    if (this.hostname.length > hostnameMaxLen) {\n      this.hostname = '';\n    } else {\n      // hostnames are always lower case.\n      this.hostname = this.hostname.toLowerCase();\n    }\n\n    if (!ipv6Hostname) {\n      // IDNA Support: Returns a punycoded representation of \"domain\".\n      // It only converts parts of the domain name that\n      // have non-ASCII characters, i.e. it doesn't matter if\n      // you call it with a domain that already is ASCII-only.\n      this.hostname = punycode.toASCII(this.hostname);\n    }\n\n    var p = this.port ? ':' + this.port : '';\n    var h = this.hostname || '';\n    this.host = h + p;\n    this.href += this.host;\n\n    // strip [ and ] from the hostname\n    // the host field still retains them, though\n    if (ipv6Hostname) {\n      this.hostname = this.hostname.substr(1, this.hostname.length - 2);\n      if (rest[0] !== '/') {\n        rest = '/' + rest;\n      }\n    }\n  }\n\n  // now rest is set to the post-host stuff.\n  // chop off any delim chars.\n  if (!unsafeProtocol[lowerProto]) {\n\n    // First, make 100% sure that any \"autoEscape\" chars get\n    // escaped, even if encodeURIComponent doesn't think they\n    // need to be.\n    for (var i = 0, l = autoEscape.length; i < l; i++) {\n      var ae = autoEscape[i];\n      if (rest.indexOf(ae) === -1)\n        continue;\n      var esc = encodeURIComponent(ae);\n      if (esc === ae) {\n        esc = escape(ae);\n      }\n      rest = rest.split(ae).join(esc);\n    }\n  }\n\n\n  // chop off from the tail first.\n  var hash = rest.indexOf('#');\n  if (hash !== -1) {\n    // got a fragment string.\n    this.hash = rest.substr(hash);\n    rest = rest.slice(0, hash);\n  }\n  var qm = rest.indexOf('?');\n  if (qm !== -1) {\n    this.search = rest.substr(qm);\n    this.query = rest.substr(qm + 1);\n    if (parseQueryString) {\n      this.query = querystring.parse(this.query);\n    }\n    rest = rest.slice(0, qm);\n  } else if (parseQueryString) {\n    // no query string, but parseQueryString still requested\n    this.search = '';\n    this.query = {};\n  }\n  if (rest) this.pathname = rest;\n  if (slashedProtocol[lowerProto] &&\n      this.hostname && !this.pathname) {\n    this.pathname = '/';\n  }\n\n  //to support http.request\n  if (this.pathname || this.search) {\n    var p = this.pathname || '';\n    var s = this.search || '';\n    this.path = p + s;\n  }\n\n  // finally, reconstruct the href based on what has been validated.\n  this.href = this.format();\n  return this;\n};\n\n// format a parsed object into a url string\nfunction urlFormat(obj) {\n  // ensure it's an object, and not a string url.\n  // If it's an obj, this is a no-op.\n  // this way, you can call url_format() on strings\n  // to clean up potentially wonky urls.\n  if (util.isString(obj)) obj = urlParse(obj);\n  if (!(obj instanceof Url)) return Url.prototype.format.call(obj);\n  return obj.format();\n}\n\nUrl.prototype.format = function() {\n  var auth = this.auth || '';\n  if (auth) {\n    auth = encodeURIComponent(auth);\n    auth = auth.replace(/%3A/i, ':');\n    auth += '@';\n  }\n\n  var protocol = this.protocol || '',\n      pathname = this.pathname || '',\n      hash = this.hash || '',\n      host = false,\n      query = '';\n\n  if (this.host) {\n    host = auth + this.host;\n  } else if (this.hostname) {\n    host = auth + (this.hostname.indexOf(':') === -1 ?\n        this.hostname :\n        '[' + this.hostname + ']');\n    if (this.port) {\n      host += ':' + this.port;\n    }\n  }\n\n  if (this.query &&\n      util.isObject(this.query) &&\n      Object.keys(this.query).length) {\n    query = querystring.stringify(this.query);\n  }\n\n  var search = this.search || (query && ('?' + query)) || '';\n\n  if (protocol && protocol.substr(-1) !== ':') protocol += ':';\n\n  // only the slashedProtocols get the //.  Not mailto:, xmpp:, etc.\n  // unless they had them to begin with.\n  if (this.slashes ||\n      (!protocol || slashedProtocol[protocol]) && host !== false) {\n    host = '//' + (host || '');\n    if (pathname && pathname.charAt(0) !== '/') pathname = '/' + pathname;\n  } else if (!host) {\n    host = '';\n  }\n\n  if (hash && hash.charAt(0) !== '#') hash = '#' + hash;\n  if (search && search.charAt(0) !== '?') search = '?' + search;\n\n  pathname = pathname.replace(/[?#]/g, function(match) {\n    return encodeURIComponent(match);\n  });\n  search = search.replace('#', '%23');\n\n  return protocol + host + pathname + search + hash;\n};\n\nfunction urlResolve(source, relative) {\n  return urlParse(source, false, true).resolve(relative);\n}\n\nUrl.prototype.resolve = function(relative) {\n  return this.resolveObject(urlParse(relative, false, true)).format();\n};\n\nfunction urlResolveObject(source, relative) {\n  if (!source) return relative;\n  return urlParse(source, false, true).resolveObject(relative);\n}\n\nUrl.prototype.resolveObject = function(relative) {\n  if (util.isString(relative)) {\n    var rel = new Url();\n    rel.parse(relative, false, true);\n    relative = rel;\n  }\n\n  var result = new Url();\n  var tkeys = Object.keys(this);\n  for (var tk = 0; tk < tkeys.length; tk++) {\n    var tkey = tkeys[tk];\n    result[tkey] = this[tkey];\n  }\n\n  // hash is always overridden, no matter what.\n  // even href=\"\" will remove it.\n  result.hash = relative.hash;\n\n  // if the relative url is empty, then there's nothing left to do here.\n  if (relative.href === '') {\n    result.href = result.format();\n    return result;\n  }\n\n  // hrefs like //foo/bar always cut to the protocol.\n  if (relative.slashes && !relative.protocol) {\n    // take everything except the protocol from relative\n    var rkeys = Object.keys(relative);\n    for (var rk = 0; rk < rkeys.length; rk++) {\n      var rkey = rkeys[rk];\n      if (rkey !== 'protocol')\n        result[rkey] = relative[rkey];\n    }\n\n    //urlParse appends trailing / to urls like http://www.example.com\n    if (slashedProtocol[result.protocol] &&\n        result.hostname && !result.pathname) {\n      result.path = result.pathname = '/';\n    }\n\n    result.href = result.format();\n    return result;\n  }\n\n  if (relative.protocol && relative.protocol !== result.protocol) {\n    // if it's a known url protocol, then changing\n    // the protocol does weird things\n    // first, if it's not file:, then we MUST have a host,\n    // and if there was a path\n    // to begin with, then we MUST have a path.\n    // if it is file:, then the host is dropped,\n    // because that's known to be hostless.\n    // anything else is assumed to be absolute.\n    if (!slashedProtocol[relative.protocol]) {\n      var keys = Object.keys(relative);\n      for (var v = 0; v < keys.length; v++) {\n        var k = keys[v];\n        result[k] = relative[k];\n      }\n      result.href = result.format();\n      return result;\n    }\n\n    result.protocol = relative.protocol;\n    if (!relative.host && !hostlessProtocol[relative.protocol]) {\n      var relPath = (relative.pathname || '').split('/');\n      while (relPath.length && !(relative.host = relPath.shift()));\n      if (!relative.host) relative.host = '';\n      if (!relative.hostname) relative.hostname = '';\n      if (relPath[0] !== '') relPath.unshift('');\n      if (relPath.length < 2) relPath.unshift('');\n      result.pathname = relPath.join('/');\n    } else {\n      result.pathname = relative.pathname;\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    result.host = relative.host || '';\n    result.auth = relative.auth;\n    result.hostname = relative.hostname || relative.host;\n    result.port = relative.port;\n    // to support http.request\n    if (result.pathname || result.search) {\n      var p = result.pathname || '';\n      var s = result.search || '';\n      result.path = p + s;\n    }\n    result.slashes = result.slashes || relative.slashes;\n    result.href = result.format();\n    return result;\n  }\n\n  var isSourceAbs = (result.pathname && result.pathname.charAt(0) === '/'),\n      isRelAbs = (\n          relative.host ||\n          relative.pathname && relative.pathname.charAt(0) === '/'\n      ),\n      mustEndAbs = (isRelAbs || isSourceAbs ||\n                    (result.host && relative.pathname)),\n      removeAllDots = mustEndAbs,\n      srcPath = result.pathname && result.pathname.split('/') || [],\n      relPath = relative.pathname && relative.pathname.split('/') || [],\n      psychotic = result.protocol && !slashedProtocol[result.protocol];\n\n  // if the url is a non-slashed url, then relative\n  // links like ../.. should be able\n  // to crawl up to the hostname, as well.  This is strange.\n  // result.protocol has already been set by now.\n  // Later on, put the first path part into the host field.\n  if (psychotic) {\n    result.hostname = '';\n    result.port = null;\n    if (result.host) {\n      if (srcPath[0] === '') srcPath[0] = result.host;\n      else srcPath.unshift(result.host);\n    }\n    result.host = '';\n    if (relative.protocol) {\n      relative.hostname = null;\n      relative.port = null;\n      if (relative.host) {\n        if (relPath[0] === '') relPath[0] = relative.host;\n        else relPath.unshift(relative.host);\n      }\n      relative.host = null;\n    }\n    mustEndAbs = mustEndAbs && (relPath[0] === '' || srcPath[0] === '');\n  }\n\n  if (isRelAbs) {\n    // it's absolute.\n    result.host = (relative.host || relative.host === '') ?\n                  relative.host : result.host;\n    result.hostname = (relative.hostname || relative.hostname === '') ?\n                      relative.hostname : result.hostname;\n    result.search = relative.search;\n    result.query = relative.query;\n    srcPath = relPath;\n    // fall through to the dot-handling below.\n  } else if (relPath.length) {\n    // it's relative\n    // throw away the existing file, and take the new path instead.\n    if (!srcPath) srcPath = [];\n    srcPath.pop();\n    srcPath = srcPath.concat(relPath);\n    result.search = relative.search;\n    result.query = relative.query;\n  } else if (!util.isNullOrUndefined(relative.search)) {\n    // just pull out the search.\n    // like href='?foo'.\n    // Put this after the other two cases because it simplifies the booleans\n    if (psychotic) {\n      result.hostname = result.host = srcPath.shift();\n      //occationaly the auth can get stuck only in host\n      //this especially happens in cases like\n      //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n      var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                       result.host.split('@') : false;\n      if (authInHost) {\n        result.auth = authInHost.shift();\n        result.host = result.hostname = authInHost.shift();\n      }\n    }\n    result.search = relative.search;\n    result.query = relative.query;\n    //to support http.request\n    if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n      result.path = (result.pathname ? result.pathname : '') +\n                    (result.search ? result.search : '');\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  if (!srcPath.length) {\n    // no path at all.  easy.\n    // we've already handled the other stuff above.\n    result.pathname = null;\n    //to support http.request\n    if (result.search) {\n      result.path = '/' + result.search;\n    } else {\n      result.path = null;\n    }\n    result.href = result.format();\n    return result;\n  }\n\n  // if a url ENDs in . or .., then it must get a trailing slash.\n  // however, if it ends in anything else non-slashy,\n  // then it must NOT get a trailing slash.\n  var last = srcPath.slice(-1)[0];\n  var hasTrailingSlash = (\n      (result.host || relative.host || srcPath.length > 1) &&\n      (last === '.' || last === '..') || last === '');\n\n  // strip single dots, resolve double dots to parent dir\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = srcPath.length; i >= 0; i--) {\n    last = srcPath[i];\n    if (last === '.') {\n      srcPath.splice(i, 1);\n    } else if (last === '..') {\n      srcPath.splice(i, 1);\n      up++;\n    } else if (up) {\n      srcPath.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (!mustEndAbs && !removeAllDots) {\n    for (; up--; up) {\n      srcPath.unshift('..');\n    }\n  }\n\n  if (mustEndAbs && srcPath[0] !== '' &&\n      (!srcPath[0] || srcPath[0].charAt(0) !== '/')) {\n    srcPath.unshift('');\n  }\n\n  if (hasTrailingSlash && (srcPath.join('/').substr(-1) !== '/')) {\n    srcPath.push('');\n  }\n\n  var isAbsolute = srcPath[0] === '' ||\n      (srcPath[0] && srcPath[0].charAt(0) === '/');\n\n  // put the host back\n  if (psychotic) {\n    result.hostname = result.host = isAbsolute ? '' :\n                                    srcPath.length ? srcPath.shift() : '';\n    //occationaly the auth can get stuck only in host\n    //this especially happens in cases like\n    //url.resolveObject('mailto:local1@domain1', 'local2@domain2')\n    var authInHost = result.host && result.host.indexOf('@') > 0 ?\n                     result.host.split('@') : false;\n    if (authInHost) {\n      result.auth = authInHost.shift();\n      result.host = result.hostname = authInHost.shift();\n    }\n  }\n\n  mustEndAbs = mustEndAbs || (result.host && srcPath.length);\n\n  if (mustEndAbs && !isAbsolute) {\n    srcPath.unshift('');\n  }\n\n  if (!srcPath.length) {\n    result.pathname = null;\n    result.path = null;\n  } else {\n    result.pathname = srcPath.join('/');\n  }\n\n  //to support request.http\n  if (!util.isNull(result.pathname) || !util.isNull(result.search)) {\n    result.path = (result.pathname ? result.pathname : '') +\n                  (result.search ? result.search : '');\n  }\n  result.auth = relative.auth || result.auth;\n  result.slashes = result.slashes || relative.slashes;\n  result.href = result.format();\n  return result;\n};\n\nUrl.prototype.parseHost = function() {\n  var host = this.host;\n  var port = portPattern.exec(host);\n  if (port) {\n    port = port[0];\n    if (port !== ':') {\n      this.port = port.substr(1);\n    }\n    host = host.substr(0, host.length - port.length);\n  }\n  if (host) this.hostname = host;\n};\n"},"lineCount":733}},"hash":"225db8078f1cf17ae2fac4933f445dbc","cacheData":{"env":{}}}