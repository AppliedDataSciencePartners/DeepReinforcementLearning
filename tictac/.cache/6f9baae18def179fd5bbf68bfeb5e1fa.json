{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/cipher-base/package.json","includedInParent":true,"mtime":1499342659000},{"name":"safe-buffer","loc":{"line":1,"column":21}},{"name":"stream","loc":{"line":2,"column":24}},{"name":"string_decoder","loc":{"line":3,"column":28}},{"name":"inherits","loc":{"line":4,"column":23}}],"generated":{"js":"\nvar Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n","map":{"mappings":[{"source":"node_modules/cipher-base/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/cipher-base/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}}],"sources":{"node_modules/cipher-base/index.js":"var Buffer = require('safe-buffer').Buffer\nvar Transform = require('stream').Transform\nvar StringDecoder = require('string_decoder').StringDecoder\nvar inherits = require('inherits')\n\nfunction CipherBase (hashMode) {\n  Transform.call(this)\n  this.hashMode = typeof hashMode === 'string'\n  if (this.hashMode) {\n    this[hashMode] = this._finalOrDigest\n  } else {\n    this.final = this._finalOrDigest\n  }\n  if (this._final) {\n    this.__final = this._final\n    this._final = null\n  }\n  this._decoder = null\n  this._encoding = null\n}\ninherits(CipherBase, Transform)\n\nCipherBase.prototype.update = function (data, inputEnc, outputEnc) {\n  if (typeof data === 'string') {\n    data = Buffer.from(data, inputEnc)\n  }\n\n  var outData = this._update(data)\n  if (this.hashMode) return this\n\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc)\n  }\n\n  return outData\n}\n\nCipherBase.prototype.setAutoPadding = function () {}\nCipherBase.prototype.getAuthTag = function () {\n  throw new Error('trying to get auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAuthTag = function () {\n  throw new Error('trying to set auth tag in unsupported state')\n}\n\nCipherBase.prototype.setAAD = function () {\n  throw new Error('trying to set aad in unsupported state')\n}\n\nCipherBase.prototype._transform = function (data, _, next) {\n  var err\n  try {\n    if (this.hashMode) {\n      this._update(data)\n    } else {\n      this.push(this._update(data))\n    }\n  } catch (e) {\n    err = e\n  } finally {\n    next(err)\n  }\n}\nCipherBase.prototype._flush = function (done) {\n  var err\n  try {\n    this.push(this.__final())\n  } catch (e) {\n    err = e\n  }\n\n  done(err)\n}\nCipherBase.prototype._finalOrDigest = function (outputEnc) {\n  var outData = this.__final() || Buffer.alloc(0)\n  if (outputEnc) {\n    outData = this._toString(outData, outputEnc, true)\n  }\n  return outData\n}\n\nCipherBase.prototype._toString = function (value, enc, fin) {\n  if (!this._decoder) {\n    this._decoder = new StringDecoder(enc)\n    this._encoding = enc\n  }\n\n  if (this._encoding !== enc) throw new Error('can\\'t switch encodings')\n\n  var out = this._decoder.write(value)\n  if (fin) {\n    out += this._decoder.end()\n  }\n\n  return out\n}\n\nmodule.exports = CipherBase\n"},"lineCount":101}},"hash":"5e68d5a3a3216f6a70c88d690db02fde","cacheData":{"env":{}}}