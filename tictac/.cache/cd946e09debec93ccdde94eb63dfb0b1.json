{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1529793848873},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/@protobufjs/aspromise/package.json","includedInParent":true,"mtime":1493030249000}],"generated":{"js":"\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","map":{"mappings":[{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/@protobufjs/aspromise/index.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}}],"sources":{"node_modules/@protobufjs/aspromise/index.js":"\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n"},"lineCount":53}},"hash":"a4f3ebea652c54faf4c1bf642cba2c97","cacheData":{"env":{}}}