{"dependencies":[{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/package.json","includedInParent":true,"mtime":1530407050385},{"name":"/home/supersteve/git/DeepReinforcementLearning/tictac/node_modules/protobufjs/package.json","includedInParent":true,"mtime":1519644894000},{"name":"@protobufjs/aspromise","loc":{"line":5,"column":25}},{"name":"@protobufjs/base64","loc":{"line":8,"column":22}},{"name":"@protobufjs/eventemitter","loc":{"line":11,"column":28}},{"name":"@protobufjs/float","loc":{"line":14,"column":21}},{"name":"@protobufjs/inquire","loc":{"line":17,"column":23}},{"name":"@protobufjs/utf8","loc":{"line":20,"column":20}},{"name":"@protobufjs/pool","loc":{"line":23,"column":20}},{"name":"./longbits","loc":{"line":26,"column":24}},{"name":"buffer"}],"generated":{"js":"var global = arguments[3];\nvar Buffer = require(\"buffer\").Buffer;\n\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n","map":{"mappings":[{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":1,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":2,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":3,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":4,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":5,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":6,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":7,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":8,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":9,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":10,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":11,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":12,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":13,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":14,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":15,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":16,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":17,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":18,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":19,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":20,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":21,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":22,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":23,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":24,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":25,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":26,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":27,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":28,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":29,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":30,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":31,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":32,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":33,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":34,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":35,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":36,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":37,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":38,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":39,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":40,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":41,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":42,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":43,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":44,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":45,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":46,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":47,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":48,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":49,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":50,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":51,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":52,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":53,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":54,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":55,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":56,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":57,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":58,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":59,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":60,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":61,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":62,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":63,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":64,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":65,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":66,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":67,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":68,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":69,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":70,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":71,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":72,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":73,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":74,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":75,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":76,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":77,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":78,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":79,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":80,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":81,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":82,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":83,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":84,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":85,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":86,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":87,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":88,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":89,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":90,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":91,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":92,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":93,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":94,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":95,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":96,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":97,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":98,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":99,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":100,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":101,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":102,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":103,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":104,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":105,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":106,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":107,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":108,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":109,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":110,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":111,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":112,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":113,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":114,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":115,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":116,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":117,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":118,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":119,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":120,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":121,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":122,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":123,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":124,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":125,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":126,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":127,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":128,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":129,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":130,"column":0},"generated":{"line":132,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":131,"column":0},"generated":{"line":133,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":132,"column":0},"generated":{"line":134,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":133,"column":0},"generated":{"line":135,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":134,"column":0},"generated":{"line":136,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":135,"column":0},"generated":{"line":137,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":136,"column":0},"generated":{"line":138,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":137,"column":0},"generated":{"line":139,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":138,"column":0},"generated":{"line":140,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":139,"column":0},"generated":{"line":141,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":140,"column":0},"generated":{"line":142,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":141,"column":0},"generated":{"line":143,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":142,"column":0},"generated":{"line":144,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":143,"column":0},"generated":{"line":145,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":144,"column":0},"generated":{"line":146,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":145,"column":0},"generated":{"line":147,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":146,"column":0},"generated":{"line":148,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":147,"column":0},"generated":{"line":149,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":148,"column":0},"generated":{"line":150,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":149,"column":0},"generated":{"line":151,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":150,"column":0},"generated":{"line":152,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":151,"column":0},"generated":{"line":153,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":152,"column":0},"generated":{"line":154,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":153,"column":0},"generated":{"line":155,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":154,"column":0},"generated":{"line":156,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":155,"column":0},"generated":{"line":157,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":156,"column":0},"generated":{"line":158,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":157,"column":0},"generated":{"line":159,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":158,"column":0},"generated":{"line":160,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":159,"column":0},"generated":{"line":161,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":160,"column":0},"generated":{"line":162,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":161,"column":0},"generated":{"line":163,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":162,"column":0},"generated":{"line":164,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":163,"column":0},"generated":{"line":165,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":164,"column":0},"generated":{"line":166,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":165,"column":0},"generated":{"line":167,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":166,"column":0},"generated":{"line":168,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":167,"column":0},"generated":{"line":169,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":168,"column":0},"generated":{"line":170,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":169,"column":0},"generated":{"line":171,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":170,"column":0},"generated":{"line":172,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":171,"column":0},"generated":{"line":173,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":172,"column":0},"generated":{"line":174,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":173,"column":0},"generated":{"line":175,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":174,"column":0},"generated":{"line":176,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":175,"column":0},"generated":{"line":177,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":176,"column":0},"generated":{"line":178,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":177,"column":0},"generated":{"line":179,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":178,"column":0},"generated":{"line":180,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":179,"column":0},"generated":{"line":181,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":180,"column":0},"generated":{"line":182,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":181,"column":0},"generated":{"line":183,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":182,"column":0},"generated":{"line":184,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":183,"column":0},"generated":{"line":185,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":184,"column":0},"generated":{"line":186,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":185,"column":0},"generated":{"line":187,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":186,"column":0},"generated":{"line":188,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":187,"column":0},"generated":{"line":189,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":188,"column":0},"generated":{"line":190,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":189,"column":0},"generated":{"line":191,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":190,"column":0},"generated":{"line":192,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":191,"column":0},"generated":{"line":193,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":192,"column":0},"generated":{"line":194,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":193,"column":0},"generated":{"line":195,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":194,"column":0},"generated":{"line":196,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":195,"column":0},"generated":{"line":197,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":196,"column":0},"generated":{"line":198,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":197,"column":0},"generated":{"line":199,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":198,"column":0},"generated":{"line":200,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":199,"column":0},"generated":{"line":201,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":200,"column":0},"generated":{"line":202,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":201,"column":0},"generated":{"line":203,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":202,"column":0},"generated":{"line":204,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":203,"column":0},"generated":{"line":205,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":204,"column":0},"generated":{"line":206,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":205,"column":0},"generated":{"line":207,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":206,"column":0},"generated":{"line":208,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":207,"column":0},"generated":{"line":209,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":208,"column":0},"generated":{"line":210,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":209,"column":0},"generated":{"line":211,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":210,"column":0},"generated":{"line":212,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":211,"column":0},"generated":{"line":213,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":212,"column":0},"generated":{"line":214,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":213,"column":0},"generated":{"line":215,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":214,"column":0},"generated":{"line":216,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":215,"column":0},"generated":{"line":217,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":216,"column":0},"generated":{"line":218,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":217,"column":0},"generated":{"line":219,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":218,"column":0},"generated":{"line":220,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":219,"column":0},"generated":{"line":221,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":220,"column":0},"generated":{"line":222,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":221,"column":0},"generated":{"line":223,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":222,"column":0},"generated":{"line":224,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":223,"column":0},"generated":{"line":225,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":224,"column":0},"generated":{"line":226,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":225,"column":0},"generated":{"line":227,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":226,"column":0},"generated":{"line":228,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":227,"column":0},"generated":{"line":229,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":228,"column":0},"generated":{"line":230,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":229,"column":0},"generated":{"line":231,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":230,"column":0},"generated":{"line":232,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":231,"column":0},"generated":{"line":233,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":232,"column":0},"generated":{"line":234,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":233,"column":0},"generated":{"line":235,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":234,"column":0},"generated":{"line":236,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":235,"column":0},"generated":{"line":237,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":236,"column":0},"generated":{"line":238,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":237,"column":0},"generated":{"line":239,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":238,"column":0},"generated":{"line":240,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":239,"column":0},"generated":{"line":241,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":240,"column":0},"generated":{"line":242,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":241,"column":0},"generated":{"line":243,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":242,"column":0},"generated":{"line":244,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":243,"column":0},"generated":{"line":245,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":244,"column":0},"generated":{"line":246,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":245,"column":0},"generated":{"line":247,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":246,"column":0},"generated":{"line":248,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":247,"column":0},"generated":{"line":249,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":248,"column":0},"generated":{"line":250,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":249,"column":0},"generated":{"line":251,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":250,"column":0},"generated":{"line":252,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":251,"column":0},"generated":{"line":253,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":252,"column":0},"generated":{"line":254,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":253,"column":0},"generated":{"line":255,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":254,"column":0},"generated":{"line":256,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":255,"column":0},"generated":{"line":257,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":256,"column":0},"generated":{"line":258,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":257,"column":0},"generated":{"line":259,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":258,"column":0},"generated":{"line":260,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":259,"column":0},"generated":{"line":261,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":260,"column":0},"generated":{"line":262,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":261,"column":0},"generated":{"line":263,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":262,"column":0},"generated":{"line":264,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":263,"column":0},"generated":{"line":265,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":264,"column":0},"generated":{"line":266,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":265,"column":0},"generated":{"line":267,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":266,"column":0},"generated":{"line":268,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":267,"column":0},"generated":{"line":269,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":268,"column":0},"generated":{"line":270,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":269,"column":0},"generated":{"line":271,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":270,"column":0},"generated":{"line":272,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":271,"column":0},"generated":{"line":273,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":272,"column":0},"generated":{"line":274,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":273,"column":0},"generated":{"line":275,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":274,"column":0},"generated":{"line":276,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":275,"column":0},"generated":{"line":277,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":276,"column":0},"generated":{"line":278,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":277,"column":0},"generated":{"line":279,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":278,"column":0},"generated":{"line":280,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":279,"column":0},"generated":{"line":281,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":280,"column":0},"generated":{"line":282,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":281,"column":0},"generated":{"line":283,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":282,"column":0},"generated":{"line":284,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":283,"column":0},"generated":{"line":285,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":284,"column":0},"generated":{"line":286,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":285,"column":0},"generated":{"line":287,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":286,"column":0},"generated":{"line":288,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":287,"column":0},"generated":{"line":289,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":288,"column":0},"generated":{"line":290,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":289,"column":0},"generated":{"line":291,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":290,"column":0},"generated":{"line":292,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":291,"column":0},"generated":{"line":293,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":292,"column":0},"generated":{"line":294,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":293,"column":0},"generated":{"line":295,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":294,"column":0},"generated":{"line":296,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":295,"column":0},"generated":{"line":297,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":296,"column":0},"generated":{"line":298,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":297,"column":0},"generated":{"line":299,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":298,"column":0},"generated":{"line":300,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":299,"column":0},"generated":{"line":301,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":300,"column":0},"generated":{"line":302,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":301,"column":0},"generated":{"line":303,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":302,"column":0},"generated":{"line":304,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":303,"column":0},"generated":{"line":305,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":304,"column":0},"generated":{"line":306,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":305,"column":0},"generated":{"line":307,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":306,"column":0},"generated":{"line":308,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":307,"column":0},"generated":{"line":309,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":308,"column":0},"generated":{"line":310,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":309,"column":0},"generated":{"line":311,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":310,"column":0},"generated":{"line":312,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":311,"column":0},"generated":{"line":313,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":312,"column":0},"generated":{"line":314,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":313,"column":0},"generated":{"line":315,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":314,"column":0},"generated":{"line":316,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":315,"column":0},"generated":{"line":317,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":316,"column":0},"generated":{"line":318,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":317,"column":0},"generated":{"line":319,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":318,"column":0},"generated":{"line":320,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":319,"column":0},"generated":{"line":321,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":320,"column":0},"generated":{"line":322,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":321,"column":0},"generated":{"line":323,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":322,"column":0},"generated":{"line":324,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":323,"column":0},"generated":{"line":325,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":324,"column":0},"generated":{"line":326,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":325,"column":0},"generated":{"line":327,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":326,"column":0},"generated":{"line":328,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":327,"column":0},"generated":{"line":329,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":328,"column":0},"generated":{"line":330,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":329,"column":0},"generated":{"line":331,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":330,"column":0},"generated":{"line":332,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":331,"column":0},"generated":{"line":333,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":332,"column":0},"generated":{"line":334,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":333,"column":0},"generated":{"line":335,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":334,"column":0},"generated":{"line":336,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":335,"column":0},"generated":{"line":337,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":336,"column":0},"generated":{"line":338,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":337,"column":0},"generated":{"line":339,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":338,"column":0},"generated":{"line":340,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":339,"column":0},"generated":{"line":341,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":340,"column":0},"generated":{"line":342,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":341,"column":0},"generated":{"line":343,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":342,"column":0},"generated":{"line":344,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":343,"column":0},"generated":{"line":345,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":344,"column":0},"generated":{"line":346,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":345,"column":0},"generated":{"line":347,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":346,"column":0},"generated":{"line":348,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":347,"column":0},"generated":{"line":349,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":348,"column":0},"generated":{"line":350,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":349,"column":0},"generated":{"line":351,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":350,"column":0},"generated":{"line":352,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":351,"column":0},"generated":{"line":353,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":352,"column":0},"generated":{"line":354,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":353,"column":0},"generated":{"line":355,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":354,"column":0},"generated":{"line":356,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":355,"column":0},"generated":{"line":357,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":356,"column":0},"generated":{"line":358,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":357,"column":0},"generated":{"line":359,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":358,"column":0},"generated":{"line":360,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":359,"column":0},"generated":{"line":361,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":360,"column":0},"generated":{"line":362,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":361,"column":0},"generated":{"line":363,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":362,"column":0},"generated":{"line":364,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":363,"column":0},"generated":{"line":365,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":364,"column":0},"generated":{"line":366,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":365,"column":0},"generated":{"line":367,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":366,"column":0},"generated":{"line":368,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":367,"column":0},"generated":{"line":369,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":368,"column":0},"generated":{"line":370,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":369,"column":0},"generated":{"line":371,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":370,"column":0},"generated":{"line":372,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":371,"column":0},"generated":{"line":373,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":372,"column":0},"generated":{"line":374,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":373,"column":0},"generated":{"line":375,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":374,"column":0},"generated":{"line":376,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":375,"column":0},"generated":{"line":377,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":376,"column":0},"generated":{"line":378,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":377,"column":0},"generated":{"line":379,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":378,"column":0},"generated":{"line":380,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":379,"column":0},"generated":{"line":381,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":380,"column":0},"generated":{"line":382,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":381,"column":0},"generated":{"line":383,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":382,"column":0},"generated":{"line":384,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":383,"column":0},"generated":{"line":385,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":384,"column":0},"generated":{"line":386,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":385,"column":0},"generated":{"line":387,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":386,"column":0},"generated":{"line":388,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":387,"column":0},"generated":{"line":389,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":388,"column":0},"generated":{"line":390,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":389,"column":0},"generated":{"line":391,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":390,"column":0},"generated":{"line":392,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":391,"column":0},"generated":{"line":393,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":392,"column":0},"generated":{"line":394,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":393,"column":0},"generated":{"line":395,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":394,"column":0},"generated":{"line":396,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":395,"column":0},"generated":{"line":397,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":396,"column":0},"generated":{"line":398,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":397,"column":0},"generated":{"line":399,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":398,"column":0},"generated":{"line":400,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":399,"column":0},"generated":{"line":401,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":400,"column":0},"generated":{"line":402,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":401,"column":0},"generated":{"line":403,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":402,"column":0},"generated":{"line":404,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":403,"column":0},"generated":{"line":405,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":404,"column":0},"generated":{"line":406,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":405,"column":0},"generated":{"line":407,"column":0}},{"source":"node_modules/protobufjs/src/util/minimal.js","original":{"line":406,"column":0},"generated":{"line":408,"column":0}}],"sources":{"node_modules/protobufjs/src/util/minimal.js":"\"use strict\";\r\nvar util = exports;\r\n\r\n// used to return a Promise where callback is omitted\r\nutil.asPromise = require(\"@protobufjs/aspromise\");\r\n\r\n// converts to / from base64 encoded strings\r\nutil.base64 = require(\"@protobufjs/base64\");\r\n\r\n// base class of rpc.Service\r\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\r\n\r\n// float handling accross browsers\r\nutil.float = require(\"@protobufjs/float\");\r\n\r\n// requires modules optionally and hides the call from bundlers\r\nutil.inquire = require(\"@protobufjs/inquire\");\r\n\r\n// converts to / from utf8 encoded strings\r\nutil.utf8 = require(\"@protobufjs/utf8\");\r\n\r\n// provides a node-like buffer pool in the browser\r\nutil.pool = require(\"@protobufjs/pool\");\r\n\r\n// utility to work with the low and high bits of a 64 bit value\r\nutil.LongBits = require(\"./longbits\");\r\n\r\n/**\r\n * An immuable empty array.\r\n * @memberof util\r\n * @type {Array.<*>}\r\n * @const\r\n */\r\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\r\n\r\n/**\r\n * An immutable empty object.\r\n * @type {Object}\r\n * @const\r\n */\r\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\r\n\r\n/**\r\n * Whether running within node or not.\r\n * @memberof util\r\n * @type {boolean}\r\n * @const\r\n */\r\nutil.isNode = Boolean(global.process && global.process.versions && global.process.versions.node);\r\n\r\n/**\r\n * Tests if the specified value is an integer.\r\n * @function\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is an integer\r\n */\r\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\r\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a string.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a string\r\n */\r\nutil.isString = function isString(value) {\r\n    return typeof value === \"string\" || value instanceof String;\r\n};\r\n\r\n/**\r\n * Tests if the specified value is a non-null object.\r\n * @param {*} value Value to test\r\n * @returns {boolean} `true` if the value is a non-null object\r\n */\r\nutil.isObject = function isObject(value) {\r\n    return value && typeof value === \"object\";\r\n};\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * This is an alias of {@link util.isSet}.\r\n * @function\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isset =\r\n\r\n/**\r\n * Checks if a property on a message is considered to be present.\r\n * @param {Object} obj Plain object or message instance\r\n * @param {string} prop Property name\r\n * @returns {boolean} `true` if considered to be present, otherwise `false`\r\n */\r\nutil.isSet = function isSet(obj, prop) {\r\n    var value = obj[prop];\r\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\r\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\r\n    return false;\r\n};\r\n\r\n/**\r\n * Any compatible Buffer instance.\r\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\r\n * @interface Buffer\r\n * @extends Uint8Array\r\n */\r\n\r\n/**\r\n * Node's Buffer class if available.\r\n * @type {Constructor<Buffer>}\r\n */\r\nutil.Buffer = (function() {\r\n    try {\r\n        var Buffer = util.inquire(\"buffer\").Buffer;\r\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\r\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\r\n    } catch (e) {\r\n        /* istanbul ignore next */\r\n        return null;\r\n    }\r\n})();\r\n\r\n// Internal alias of or polyfull for Buffer.from.\r\nutil._Buffer_from = null;\r\n\r\n// Internal alias of or polyfill for Buffer.allocUnsafe.\r\nutil._Buffer_allocUnsafe = null;\r\n\r\n/**\r\n * Creates a new buffer of whatever type supported by the environment.\r\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\r\n * @returns {Uint8Array|Buffer} Buffer\r\n */\r\nutil.newBuffer = function newBuffer(sizeOrArray) {\r\n    /* istanbul ignore next */\r\n    return typeof sizeOrArray === \"number\"\r\n        ? util.Buffer\r\n            ? util._Buffer_allocUnsafe(sizeOrArray)\r\n            : new util.Array(sizeOrArray)\r\n        : util.Buffer\r\n            ? util._Buffer_from(sizeOrArray)\r\n            : typeof Uint8Array === \"undefined\"\r\n                ? sizeOrArray\r\n                : new Uint8Array(sizeOrArray);\r\n};\r\n\r\n/**\r\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\r\n * @type {Constructor<Uint8Array>}\r\n */\r\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\r\n\r\n/**\r\n * Any compatible Long instance.\r\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\r\n * @interface Long\r\n * @property {number} low Low bits\r\n * @property {number} high High bits\r\n * @property {boolean} unsigned Whether unsigned or not\r\n */\r\n\r\n/**\r\n * Long.js's Long class if available.\r\n * @type {Constructor<Long>}\r\n */\r\nutil.Long = /* istanbul ignore next */ global.dcodeIO && /* istanbul ignore next */ global.dcodeIO.Long || util.inquire(\"long\");\r\n\r\n/**\r\n * Regular expression used to verify 2 bit (`bool`) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key2Re = /^true|false|0|1$/;\r\n\r\n/**\r\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\r\n\r\n/**\r\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\r\n * @type {RegExp}\r\n * @const\r\n */\r\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\r\n\r\n/**\r\n * Converts a number or long to an 8 characters long hash string.\r\n * @param {Long|number} value Value to convert\r\n * @returns {string} Hash\r\n */\r\nutil.longToHash = function longToHash(value) {\r\n    return value\r\n        ? util.LongBits.from(value).toHash()\r\n        : util.LongBits.zeroHash;\r\n};\r\n\r\n/**\r\n * Converts an 8 characters long hash string to a long or number.\r\n * @param {string} hash Hash\r\n * @param {boolean} [unsigned=false] Whether unsigned or not\r\n * @returns {Long|number} Original value\r\n */\r\nutil.longFromHash = function longFromHash(hash, unsigned) {\r\n    var bits = util.LongBits.fromHash(hash);\r\n    if (util.Long)\r\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\r\n    return bits.toNumber(Boolean(unsigned));\r\n};\r\n\r\n/**\r\n * Merges the properties of the source object into the destination object.\r\n * @memberof util\r\n * @param {Object.<string,*>} dst Destination object\r\n * @param {Object.<string,*>} src Source object\r\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\r\n * @returns {Object.<string,*>} Destination object\r\n */\r\nfunction merge(dst, src, ifNotSet) { // used by converters\r\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\r\n        if (dst[keys[i]] === undefined || !ifNotSet)\r\n            dst[keys[i]] = src[keys[i]];\r\n    return dst;\r\n}\r\n\r\nutil.merge = merge;\r\n\r\n/**\r\n * Converts the first character of a string to lower case.\r\n * @param {string} str String to convert\r\n * @returns {string} Converted string\r\n */\r\nutil.lcFirst = function lcFirst(str) {\r\n    return str.charAt(0).toLowerCase() + str.substring(1);\r\n};\r\n\r\n/**\r\n * Creates a custom error constructor.\r\n * @memberof util\r\n * @param {string} name Error name\r\n * @returns {Constructor<Error>} Custom error constructor\r\n */\r\nfunction newError(name) {\r\n\r\n    function CustomError(message, properties) {\r\n\r\n        if (!(this instanceof CustomError))\r\n            return new CustomError(message, properties);\r\n\r\n        // Error.call(this, message);\r\n        // ^ just returns a new error instance because the ctor can be called as a function\r\n\r\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\r\n\r\n        /* istanbul ignore next */\r\n        if (Error.captureStackTrace) // node\r\n            Error.captureStackTrace(this, CustomError);\r\n        else\r\n            Object.defineProperty(this, \"stack\", { value: (new Error()).stack || \"\" });\r\n\r\n        if (properties)\r\n            merge(this, properties);\r\n    }\r\n\r\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\r\n\r\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\r\n\r\n    CustomError.prototype.toString = function toString() {\r\n        return this.name + \": \" + this.message;\r\n    };\r\n\r\n    return CustomError;\r\n}\r\n\r\nutil.newError = newError;\r\n\r\n/**\r\n * Constructs a new protocol error.\r\n * @classdesc Error subclass indicating a protocol specifc error.\r\n * @memberof util\r\n * @extends Error\r\n * @template T extends Message<T>\r\n * @constructor\r\n * @param {string} message Error message\r\n * @param {Object.<string,*>} [properties] Additional properties\r\n * @example\r\n * try {\r\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\r\n * } catch (e) {\r\n *     if (e instanceof ProtocolError && e.instance)\r\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\r\n * }\r\n */\r\nutil.ProtocolError = newError(\"ProtocolError\");\r\n\r\n/**\r\n * So far decoded message instance.\r\n * @name util.ProtocolError#instance\r\n * @type {Message<T>}\r\n */\r\n\r\n/**\r\n * A OneOf getter as returned by {@link util.oneOfGetter}.\r\n * @typedef OneOfGetter\r\n * @type {function}\r\n * @returns {string|undefined} Set field name, if any\r\n */\r\n\r\n/**\r\n * Builds a getter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfGetter} Unbound getter\r\n */\r\nutil.oneOfGetter = function getOneOf(fieldNames) {\r\n    var fieldMap = {};\r\n    for (var i = 0; i < fieldNames.length; ++i)\r\n        fieldMap[fieldNames[i]] = 1;\r\n\r\n    /**\r\n     * @returns {string|undefined} Set field name, if any\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function() { // eslint-disable-line consistent-return\r\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\r\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\r\n                return keys[i];\r\n    };\r\n};\r\n\r\n/**\r\n * A OneOf setter as returned by {@link util.oneOfSetter}.\r\n * @typedef OneOfSetter\r\n * @type {function}\r\n * @param {string|undefined} value Field name\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Builds a setter for a oneof's present field name.\r\n * @param {string[]} fieldNames Field names\r\n * @returns {OneOfSetter} Unbound setter\r\n */\r\nutil.oneOfSetter = function setOneOf(fieldNames) {\r\n\r\n    /**\r\n     * @param {string} name Field name\r\n     * @returns {undefined}\r\n     * @this Object\r\n     * @ignore\r\n     */\r\n    return function(name) {\r\n        for (var i = 0; i < fieldNames.length; ++i)\r\n            if (fieldNames[i] !== name)\r\n                delete this[fieldNames[i]];\r\n    };\r\n};\r\n\r\n/**\r\n * Default conversion options used for {@link Message#toJSON} implementations.\r\n *\r\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\r\n *\r\n * - Longs become strings\r\n * - Enums become string keys\r\n * - Bytes become base64 encoded strings\r\n * - (Sub-)Messages become plain objects\r\n * - Maps become plain objects with all string keys\r\n * - Repeated fields become arrays\r\n * - NaN and Infinity for float and double fields become strings\r\n *\r\n * @type {IConversionOptions}\r\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\r\n */\r\nutil.toJSONOptions = {\r\n    longs: String,\r\n    enums: String,\r\n    bytes: String,\r\n    json: true\r\n};\r\n\r\nutil._configure = function() {\r\n    var Buffer = util.Buffer;\r\n    /* istanbul ignore if */\r\n    if (!Buffer) {\r\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\r\n        return;\r\n    }\r\n    // because node 4.x buffers are incompatible & immutable\r\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\r\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\r\n        /* istanbul ignore next */\r\n        function Buffer_from(value, encoding) {\r\n            return new Buffer(value, encoding);\r\n        };\r\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\r\n        /* istanbul ignore next */\r\n        function Buffer_allocUnsafe(size) {\r\n            return new Buffer(size);\r\n        };\r\n};\r\n"},"lineCount":408}},"hash":"5df7c64d8f555ba21498c6cff7d6feed","cacheData":{"env":{}}}